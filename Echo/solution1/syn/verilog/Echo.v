// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Echo,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z100ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.598000,HLS_SYN_LAT=54,HLS_SYN_TPT=4,HLS_SYN_MEM=128,HLS_SYN_DSP=27,HLS_SYN_FF=6140,HLS_SYN_LUT=6667}" *)

module Echo (
        ap_clk,
        ap_rst_n,
        change_V_TDATA,
        change_V_TVALID,
        change_V_TREADY,
        value_in_V_TDATA,
        value_in_V_TVALID,
        value_in_V_TREADY,
        value_out_V_TDATA,
        value_out_V_TVALID,
        value_out_V_TREADY,
        scale,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] change_V_TDATA;
input   change_V_TVALID;
output   change_V_TREADY;
input  [31:0] value_in_V_TDATA;
input   value_in_V_TVALID;
output   value_in_V_TREADY;
output  [31:0] value_out_V_TDATA;
output   value_out_V_TVALID;
input   value_out_V_TREADY;
input  [31:0] scale;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;

reg    ap_rst_n_inv;
reg   [31:0] change_V_0_data_out;
wire    change_V_0_vld_in;
wire    change_V_0_vld_out;
wire    change_V_0_ack_in;
reg    change_V_0_ack_out;
reg   [31:0] change_V_0_payload_A;
reg   [31:0] change_V_0_payload_B;
reg    change_V_0_sel_rd;
reg    change_V_0_sel_wr;
wire    change_V_0_sel;
wire    change_V_0_load_A;
wire    change_V_0_load_B;
reg   [1:0] change_V_0_state;
wire    change_V_0_state_cmp_full;
reg   [31:0] value_in_V_0_data_out;
wire    value_in_V_0_vld_in;
wire    value_in_V_0_vld_out;
wire    value_in_V_0_ack_in;
reg    value_in_V_0_ack_out;
reg   [31:0] value_in_V_0_payload_A;
reg   [31:0] value_in_V_0_payload_B;
reg    value_in_V_0_sel_rd;
reg    value_in_V_0_sel_wr;
wire    value_in_V_0_sel;
wire    value_in_V_0_load_A;
wire    value_in_V_0_load_B;
reg   [1:0] value_in_V_0_state;
wire    value_in_V_0_state_cmp_full;
reg   [31:0] value_out_V_1_data_out;
reg    value_out_V_1_vld_in;
wire    value_out_V_1_vld_out;
wire    value_out_V_1_ack_in;
wire    value_out_V_1_ack_out;
reg   [31:0] value_out_V_1_payload_A;
reg   [31:0] value_out_V_1_payload_B;
reg    value_out_V_1_sel_rd;
reg    value_out_V_1_sel_wr;
wire    value_out_V_1_sel;
wire    value_out_V_1_load_A;
wire    value_out_V_1_load_B;
reg   [1:0] value_out_V_1_state;
wire    value_out_V_1_state_cmp_full;
wire   [31:0] delay;
reg   [31:0] delayCount;
reg   [31:0] readBuffer1;
reg   [31:0] readBuffer2;
reg   [31:0] readBuffer3;
reg   [31:0] readBuffer4;
reg   [31:0] writeBuffer;
reg   [15:0] buffer_r_address0;
reg    buffer_r_ce0;
wire   [31:0] buffer_r_q0;
reg   [15:0] buffer_r_address1;
reg    buffer_r_ce1;
reg    buffer_r_we1;
wire   [31:0] buffer_r_q1;
reg    change_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_flag00000000;
reg    value_in_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_flag00000000;
reg   [0:0] tmp_2_reg_896;
reg    value_out_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter13;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_flag00000000;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_state21_pp0_stage0_iter5;
wire    ap_block_state25_pp0_stage0_iter6;
wire    ap_block_state29_pp0_stage0_iter7;
wire    ap_block_state33_pp0_stage0_iter8;
wire    ap_block_state37_pp0_stage0_iter9;
wire    ap_block_state41_pp0_stage0_iter10;
wire    ap_block_state45_pp0_stage0_iter11;
wire    ap_block_state49_pp0_stage0_iter12;
wire    ap_block_state53_pp0_stage0_iter13;
wire    ap_block_pp0_stage0_flag00011001;
reg   [31:0] tmp_6_reg_190;
reg   [31:0] reg_235;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_state22_pp0_stage1_iter5;
wire    ap_block_state26_pp0_stage1_iter6;
wire    ap_block_state30_pp0_stage1_iter7;
wire    ap_block_state34_pp0_stage1_iter8;
wire    ap_block_state38_pp0_stage1_iter9;
wire    ap_block_state42_pp0_stage1_iter10;
wire    ap_block_state46_pp0_stage1_iter11;
wire    ap_block_state50_pp0_stage1_iter12;
wire    ap_block_state54_pp0_stage1_iter13;
reg    ap_block_pp0_stage1_flag00011001;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage2_iter4;
wire    ap_block_state23_pp0_stage2_iter5;
wire    ap_block_state27_pp0_stage2_iter6;
wire    ap_block_state31_pp0_stage2_iter7;
wire    ap_block_state35_pp0_stage2_iter8;
wire    ap_block_state39_pp0_stage2_iter9;
wire    ap_block_state43_pp0_stage2_iter10;
wire    ap_block_state47_pp0_stage2_iter11;
wire    ap_block_state51_pp0_stage2_iter12;
reg    ap_block_state55_pp0_stage2_iter13;
reg    ap_block_pp0_stage2_flag00011001;
reg   [0:0] tmp_26_reg_995;
reg   [31:0] reg_240;
wire   [63:0] grp_fu_214_p2;
reg   [63:0] reg_246;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] tmp_8_reg_949;
reg   [0:0] ap_reg_pp0_iter5_tmp_8_reg_949;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] tmp_16_reg_972;
reg   [0:0] ap_reg_pp0_iter7_tmp_16_reg_972;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] ap_reg_pp0_iter8_tmp_26_reg_995;
reg    ap_enable_reg_pp0_iter11;
reg    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage3_iter4;
wire    ap_block_state24_pp0_stage3_iter5;
wire    ap_block_state28_pp0_stage3_iter6;
wire    ap_block_state32_pp0_stage3_iter7;
wire    ap_block_state36_pp0_stage3_iter8;
wire    ap_block_state40_pp0_stage3_iter9;
wire    ap_block_state44_pp0_stage3_iter10;
wire    ap_block_state48_pp0_stage3_iter11;
wire    ap_block_state52_pp0_stage3_iter12;
reg    ap_block_pp0_stage3_flag00011001;
reg   [0:0] tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter11_tmp_36_reg_1036;
reg   [0:0] sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter11_sel_tmp_reg_1046;
reg   [31:0] delay_read_reg_871;
wire   [0:0] tmp_1_fu_251_p2;
reg   [0:0] tmp_1_reg_879;
wire   [31:0] writeBuffer_load_s_fu_261_p3;
reg   [31:0] writeBuffer_load_s_reg_889;
wire   [0:0] tmp_2_fu_269_p2;
wire   [0:0] not_tmp_1_fu_279_p2;
reg   [0:0] not_tmp_1_reg_900;
wire   [31:0] readBuffer3_load_s_fu_284_p3;
reg   [31:0] readBuffer3_load_s_reg_916;
wire   [31:0] tmp_5_fu_295_p2;
wire   [31:0] delayCount_load_s_fu_312_p3;
reg   [31:0] delayCount_load_s_reg_930;
wire   [0:0] tmp_7_fu_333_p2;
reg   [0:0] tmp_7_reg_936;
reg   [0:0] ap_reg_pp0_iter2_tmp_7_reg_936;
reg   [0:0] ap_reg_pp0_iter3_tmp_7_reg_936;
reg   [0:0] ap_reg_pp0_iter4_tmp_7_reg_936;
reg   [0:0] ap_reg_pp0_iter5_tmp_7_reg_936;
reg   [0:0] ap_reg_pp0_iter6_tmp_7_reg_936;
reg   [0:0] ap_reg_pp0_iter7_tmp_7_reg_936;
reg   [0:0] ap_reg_pp0_iter8_tmp_7_reg_936;
reg   [0:0] ap_reg_pp0_iter9_tmp_7_reg_936;
wire   [0:0] tmp_8_fu_344_p2;
reg   [0:0] ap_reg_pp0_iter2_tmp_8_reg_949;
reg   [0:0] ap_reg_pp0_iter3_tmp_8_reg_949;
reg   [0:0] ap_reg_pp0_iter4_tmp_8_reg_949;
wire   [31:0] tmp_13_fu_355_p2;
reg   [31:0] tmp_13_reg_961;
wire   [0:0] tmp_15_fu_369_p2;
reg   [0:0] tmp_15_reg_966;
wire   [0:0] tmp_16_fu_374_p2;
reg   [0:0] ap_reg_pp0_iter2_tmp_16_reg_972;
reg   [0:0] ap_reg_pp0_iter3_tmp_16_reg_972;
reg   [0:0] ap_reg_pp0_iter4_tmp_16_reg_972;
reg   [0:0] ap_reg_pp0_iter5_tmp_16_reg_972;
reg   [0:0] ap_reg_pp0_iter6_tmp_16_reg_972;
wire   [31:0] tmp_23_fu_385_p2;
reg   [31:0] tmp_23_reg_984;
wire   [0:0] tmp_25_fu_399_p2;
reg   [0:0] tmp_25_reg_989;
wire   [0:0] tmp_26_fu_404_p2;
reg   [0:0] ap_reg_pp0_iter2_tmp_26_reg_995;
reg   [0:0] ap_reg_pp0_iter3_tmp_26_reg_995;
reg   [0:0] ap_reg_pp0_iter4_tmp_26_reg_995;
reg   [0:0] ap_reg_pp0_iter5_tmp_26_reg_995;
reg   [0:0] ap_reg_pp0_iter6_tmp_26_reg_995;
reg   [0:0] ap_reg_pp0_iter7_tmp_26_reg_995;
reg   [0:0] ap_reg_pp0_iter9_tmp_26_reg_995;
wire   [31:0] tmp_33_fu_409_p2;
reg   [31:0] tmp_33_reg_1002;
wire   [0:0] tmp_35_fu_421_p2;
reg   [0:0] tmp_35_reg_1007;
wire   [0:0] tmp_44_fu_426_p2;
reg   [0:0] tmp_44_reg_1012;
wire   [63:0] grp_fu_231_p1;
reg   [63:0] tmp_9_reg_1025;
wire   [0:0] tmp_36_fu_495_p2;
reg   [0:0] ap_reg_pp0_iter2_tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter3_tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter4_tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter5_tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter6_tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter7_tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter8_tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter9_tmp_36_reg_1036;
reg   [0:0] ap_reg_pp0_iter10_tmp_36_reg_1036;
wire   [0:0] sel_tmp_fu_597_p2;
reg   [0:0] ap_reg_pp0_iter2_sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter3_sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter4_sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter5_sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter6_sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter7_sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter8_sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter9_sel_tmp_reg_1046;
reg   [0:0] ap_reg_pp0_iter10_sel_tmp_reg_1046;
wire   [0:0] readBuffer1_flag_2_fu_603_p3;
wire   [0:0] sel_tmp3_fu_631_p2;
reg   [0:0] sel_tmp3_reg_1055;
reg   [0:0] ap_reg_pp0_iter2_sel_tmp3_reg_1055;
reg   [0:0] ap_reg_pp0_iter3_sel_tmp3_reg_1055;
reg   [0:0] ap_reg_pp0_iter4_sel_tmp3_reg_1055;
reg   [0:0] ap_reg_pp0_iter5_sel_tmp3_reg_1055;
reg   [0:0] ap_reg_pp0_iter6_sel_tmp3_reg_1055;
reg   [0:0] ap_reg_pp0_iter7_sel_tmp3_reg_1055;
reg   [0:0] ap_reg_pp0_iter8_sel_tmp3_reg_1055;
reg   [0:0] ap_reg_pp0_iter9_sel_tmp3_reg_1055;
wire   [0:0] readBuffer2_flag_2_fu_649_p3;
wire   [0:0] sel_tmp11_fu_685_p2;
reg   [0:0] sel_tmp11_reg_1064;
reg   [0:0] ap_reg_pp0_iter2_sel_tmp11_reg_1064;
reg   [0:0] ap_reg_pp0_iter3_sel_tmp11_reg_1064;
reg   [0:0] ap_reg_pp0_iter4_sel_tmp11_reg_1064;
reg   [0:0] ap_reg_pp0_iter5_sel_tmp11_reg_1064;
reg   [0:0] ap_reg_pp0_iter6_sel_tmp11_reg_1064;
reg   [0:0] ap_reg_pp0_iter7_sel_tmp11_reg_1064;
reg   [0:0] ap_reg_pp0_iter8_sel_tmp11_reg_1064;
reg   [0:0] ap_reg_pp0_iter9_sel_tmp11_reg_1064;
wire   [0:0] readBuffer3_flag_2_fu_711_p3;
wire   [0:0] readBuffer4_flag_2_fu_748_p3;
wire   [63:0] grp_fu_208_p1;
reg   [63:0] tmp_10_reg_1077;
reg   [63:0] ap_reg_pp0_iter2_tmp_10_reg_1077;
wire   [63:0] grp_fu_211_p1;
reg   [63:0] tmp_19_reg_1082;
reg   [63:0] ap_reg_pp0_iter2_tmp_19_reg_1082;
reg   [63:0] tmp_29_reg_1092;
reg   [63:0] ap_reg_pp0_iter2_tmp_29_reg_1092;
reg   [31:0] buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter2_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter3_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter4_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter5_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter6_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter7_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter8_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter9_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter10_buffer_load_4_reg_1097;
reg   [31:0] ap_reg_pp0_iter11_buffer_load_4_reg_1097;
reg   [63:0] tmp_39_reg_1102;
reg    ap_enable_reg_pp0_iter2;
reg   [63:0] ap_reg_pp0_iter3_tmp_39_reg_1102;
wire   [63:0] grp_fu_219_p2;
reg   [63:0] tmp_s_reg_1107;
wire   [63:0] grp_fu_224_p2;
reg   [63:0] tmp_17_reg_1112;
reg   [63:0] tmp_27_reg_1117;
reg    ap_enable_reg_pp0_iter3;
reg   [63:0] tmp_37_reg_1122;
reg   [63:0] tmp_11_reg_1127;
reg    ap_enable_reg_pp0_iter4;
reg   [63:0] tmp_20_reg_1132;
reg   [63:0] ap_reg_pp0_iter5_tmp_20_reg_1132;
reg   [63:0] tmp_30_reg_1137;
reg   [63:0] ap_reg_pp0_iter5_tmp_30_reg_1137;
reg   [63:0] ap_reg_pp0_iter6_tmp_30_reg_1137;
reg   [63:0] ap_reg_pp0_iter7_tmp_30_reg_1137;
reg   [63:0] tmp_40_reg_1142;
reg   [63:0] ap_reg_pp0_iter5_tmp_40_reg_1142;
reg   [63:0] ap_reg_pp0_iter6_tmp_40_reg_1142;
reg   [63:0] ap_reg_pp0_iter7_tmp_40_reg_1142;
reg   [63:0] ap_reg_pp0_iter8_tmp_40_reg_1142;
reg   [63:0] ap_reg_pp0_iter9_tmp_40_reg_1142;
reg   [63:0] ap_reg_pp0_iter10_tmp_40_reg_1142;
wire   [31:0] outAccumulate1_fu_817_p3;
reg   [31:0] outAccumulate1_reg_1147;
reg   [31:0] ap_reg_pp0_iter6_outAccumulate1_reg_1147;
reg   [31:0] ap_reg_pp0_iter7_outAccumulate1_reg_1147;
reg   [31:0] ap_reg_pp0_iter8_outAccumulate1_reg_1147;
reg   [63:0] tmp_21_reg_1154;
reg    ap_enable_reg_pp0_iter6;
wire   [31:0] outAccumulate_1_fu_824_p3;
reg   [31:0] outAccumulate_1_reg_1159;
reg   [31:0] ap_reg_pp0_iter8_outAccumulate_1_reg_1159;
reg   [63:0] tmp_31_reg_1166;
wire   [31:0] outAccumulate_2_fu_830_p3;
reg   [31:0] outAccumulate_2_reg_1171;
reg   [31:0] ap_reg_pp0_iter10_outAccumulate_2_reg_1171;
reg   [31:0] ap_reg_pp0_iter11_outAccumulate_2_reg_1171;
wire   [31:0] sel_tmp19_fu_847_p3;
reg   [31:0] sel_tmp19_reg_1178;
reg   [31:0] ap_reg_pp0_iter10_sel_tmp19_reg_1178;
reg   [31:0] ap_reg_pp0_iter11_sel_tmp19_reg_1178;
reg   [63:0] tmp_41_reg_1183;
reg    ap_enable_reg_pp0_iter10;
wire   [31:0] outAccumulate_7_fu_860_p3;
reg   [31:0] outAccumulate_7_reg_1188;
wire   [31:0] grp_fu_200_p2;
reg    ap_block_pp0_stage3_flag00011011;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter12;
reg    ap_block_pp0_stage2_flag00011011;
wire   [0:0] ap_phi_precharge_reg_pp0_iter0_writeBuffer_flag_1_reg_167;
reg   [0:0] ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167;
wire   [0:0] writeBuffer_flag_1_phi_fu_171_p4;
wire   [31:0] ap_phi_precharge_reg_pp0_iter0_writeBuffer_new_1_reg_179;
reg   [31:0] ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179;
wire   [31:0] ap_phi_precharge_reg_pp0_iter0_tmp_6_reg_190;
reg   [31:0] ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190;
wire  signed [63:0] tmp_3_fu_291_p1;
wire  signed [63:0] tmp_4_fu_350_p1;
wire    ap_block_pp0_stage0_flag00000000;
wire  signed [63:0] tmp_18_fu_380_p1;
wire  signed [63:0] tmp_28_fu_475_p1;
wire  signed [63:0] tmp_38_fu_501_p1;
wire  signed [63:0] tmp_50_fu_812_p1;
wire   [31:0] tmp_48_fu_770_p2;
wire   [31:0] readBuffer1_new_2_fu_618_p3;
wire   [31:0] readBuffer2_new_2_fu_672_p3;
wire   [31:0] readBuffer3_new_2_fu_740_p3;
wire   [31:0] readBuffer4_new_2_fu_755_p3;
reg    ap_block_pp0_stage1_flag00001001;
reg    ap_block_pp0_stage2_flag00001001;
reg   [31:0] grp_fu_208_p0;
reg   [31:0] grp_fu_211_p0;
reg   [63:0] grp_fu_214_p0;
reg   [63:0] grp_fu_214_p1;
reg   [63:0] grp_fu_219_p0;
reg   [63:0] grp_fu_219_p1;
reg   [63:0] grp_fu_224_p0;
reg   [63:0] grp_fu_224_p1;
wire   [31:0] readBuffer1_load_s_fu_319_p3;
wire   [31:0] tmp_14_fu_361_p3;
wire   [31:0] readBuffer2_load_s_fu_326_p3;
wire   [31:0] tmp_24_fu_391_p3;
wire   [31:0] tmp_34_fu_414_p3;
wire   [0:0] not_tmp_8_fu_443_p2;
wire   [0:0] not_tmp_s_fu_459_p2;
wire   [0:0] not_tmp_2_fu_479_p2;
wire   [31:0] readBuffer4_load_s_fu_436_p3;
wire   [0:0] readBuffer1_flag_1_fu_448_p2;
wire   [31:0] readBuffer1_new_1_fu_453_p3;
wire   [0:0] readBuffer2_flag_1_fu_464_p2;
wire   [31:0] readBuffer2_new_1_fu_469_p3;
wire   [0:0] readBuffer3_flag_1_fu_484_p2;
wire   [31:0] readBuffer3_new_1_fu_489_p3;
wire   [0:0] tmp5_fu_554_p2;
wire   [0:0] not_tmp_3_fu_512_p2;
wire   [0:0] tmp_45_fu_564_p2;
wire   [31:0] tmp_43_fu_506_p2;
wire   [0:0] tmp6_fu_593_p2;
wire   [0:0] sel_tmp9_fu_589_p2;
wire   [0:0] p_readBuffer1_flag_1_fu_518_p2;
wire   [0:0] sel_tmp8_fu_583_p3;
wire   [31:0] p_readBuffer1_new_1_fu_523_p3;
wire   [31:0] sel_tmp1_fu_611_p3;
wire   [0:0] sel_tmp2_fu_626_p2;
wire   [0:0] sel_tmp4_fu_636_p3;
wire   [0:0] p_readBuffer2_flag_1_fu_530_p2;
wire   [0:0] sel_tmp5_fu_643_p3;
wire   [31:0] sel_tmp6_fu_657_p3;
wire   [31:0] p_readBuffer2_new_1_fu_535_p3;
wire   [31:0] sel_tmp7_fu_665_p3;
wire   [0:0] sel_tmp10_fu_680_p2;
wire   [0:0] sel_tmp12_fu_691_p3;
wire   [0:0] sel_tmp13_fu_698_p3;
wire   [0:0] p_readBuffer3_flag_1_fu_542_p2;
wire   [0:0] sel_tmp14_fu_705_p3;
wire   [0:0] tmp_46_fu_719_p2;
wire   [31:0] sel_tmp15_fu_725_p3;
wire   [31:0] p_readBuffer3_new_1_fu_547_p3;
wire   [31:0] sel_tmp16_fu_733_p3;
wire   [0:0] p_readBuffer4_flag_1_fu_558_p2;
wire   [31:0] p_readBuffer4_new_1_fu_569_p3;
wire   [31:0] p_delayCount_load_s_fu_577_p3;
wire   [31:0] tmp_47_fu_763_p3;
wire   [31:0] tmp_49_fu_806_p2;
wire   [31:0] grp_fu_205_p1;
wire   [31:0] sel_tmp17_fu_836_p3;
wire   [31:0] sel_tmp18_fu_841_p3;
wire   [31:0] outAccumulate_3_fu_854_p3;
reg    grp_fu_200_ce;
reg    grp_fu_214_ce;
reg    grp_fu_219_ce;
reg    grp_fu_224_ce;
reg    grp_fu_231_ce;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_block_pp0_stage1_flag00011011;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_822;

// power-on initialization
initial begin
#0 change_V_0_sel_rd = 1'b0;
#0 change_V_0_sel_wr = 1'b0;
#0 change_V_0_state = 2'd0;
#0 value_in_V_0_sel_rd = 1'b0;
#0 value_in_V_0_sel_wr = 1'b0;
#0 value_in_V_0_state = 2'd0;
#0 value_out_V_1_sel_rd = 1'b0;
#0 value_out_V_1_sel_wr = 1'b0;
#0 value_out_V_1_state = 2'd0;
#0 delayCount = 32'd0;
#0 readBuffer1 = 32'd0;
#0 readBuffer2 = 32'd0;
#0 readBuffer3 = 32'd0;
#0 readBuffer4 = 32'd0;
#0 writeBuffer = 32'd0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

Echo_buffer_r #(
    .DataWidth( 32 ),
    .AddressRange( 48000 ),
    .AddressWidth( 16 ))
buffer_r_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_r_address0),
    .ce0(buffer_r_ce0),
    .q0(buffer_r_q0),
    .address1(buffer_r_address1),
    .ce1(buffer_r_ce1),
    .we1(buffer_r_we1),
    .d1(value_in_V_0_data_out),
    .q1(buffer_r_q1)
);

Echo_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
Echo_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .delay(delay)
);

Echo_fadd_32ns_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Echo_fadd_32ns_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_reg_pp0_iter11_buffer_load_4_reg_1097),
    .din1(outAccumulate_7_reg_1188),
    .ce(grp_fu_200_ce),
    .dout(grp_fu_200_p2)
);

Echo_fptrunc_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Echo_fptrunc_64nscud_U2(
    .din0(reg_246),
    .dout(grp_fu_205_p1)
);

Echo_fpext_32ns_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Echo_fpext_32ns_6dEe_U3(
    .din0(grp_fu_208_p0),
    .dout(grp_fu_208_p1)
);

Echo_fpext_32ns_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Echo_fpext_32ns_6dEe_U4(
    .din0(grp_fu_211_p0),
    .dout(grp_fu_211_p1)
);

Echo_dadd_64ns_64eOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Echo_dadd_64ns_64eOg_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_214_p0),
    .din1(grp_fu_214_p1),
    .ce(grp_fu_214_ce),
    .dout(grp_fu_214_p2)
);

Echo_dmul_64ns_64fYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Echo_dmul_64ns_64fYi_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_219_p0),
    .din1(grp_fu_219_p1),
    .ce(grp_fu_219_ce),
    .dout(grp_fu_219_p2)
);

Echo_dmul_64ns_64fYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Echo_dmul_64ns_64fYi_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_224_p0),
    .din1(grp_fu_224_p1),
    .ce(grp_fu_224_ce),
    .dout(grp_fu_224_p2)
);

Echo_sitodp_32ns_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Echo_sitodp_32ns_g8j_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(scale),
    .ce(grp_fu_231_ce),
    .dout(grp_fu_231_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        change_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == change_V_0_ack_out) & (1'b1 == change_V_0_vld_out))) begin
            change_V_0_sel_rd <= ~change_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        change_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == change_V_0_vld_in) & (1'b1 == change_V_0_ack_in))) begin
            change_V_0_sel_wr <= ~change_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        change_V_0_state <= 2'd0;
    end else begin
        if ((((1'b0 == change_V_0_vld_in) & (1'b1 == change_V_0_ack_out) & (change_V_0_state == 2'd3)) | ((1'b0 == change_V_0_vld_in) & (change_V_0_state == 2'd2)))) begin
            change_V_0_state <= 2'd2;
        end else if ((((1'b1 == change_V_0_vld_in) & (1'b0 == change_V_0_ack_out) & (change_V_0_state == 2'd3)) | ((1'b0 == change_V_0_ack_out) & (change_V_0_state == 2'd1)))) begin
            change_V_0_state <= 2'd1;
        end else if ((((1'b1 == change_V_0_vld_in) & (change_V_0_state == 2'd2)) | ((1'b1 == change_V_0_ack_out) & (change_V_0_state == 2'd1)) | ((change_V_0_state == 2'd3) & ~((1'b1 == change_V_0_vld_in) & (1'b0 == change_V_0_ack_out)) & ~((1'b0 == change_V_0_vld_in) & (1'b1 == change_V_0_ack_out))))) begin
            change_V_0_state <= 2'd3;
        end else begin
            change_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        value_in_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == value_in_V_0_ack_out) & (1'b1 == value_in_V_0_vld_out))) begin
            value_in_V_0_sel_rd <= ~value_in_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        value_in_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == value_in_V_0_vld_in) & (1'b1 == value_in_V_0_ack_in))) begin
            value_in_V_0_sel_wr <= ~value_in_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        value_in_V_0_state <= 2'd0;
    end else begin
        if ((((1'b0 == value_in_V_0_vld_in) & (1'b1 == value_in_V_0_ack_out) & (2'd3 == value_in_V_0_state)) | ((1'b0 == value_in_V_0_vld_in) & (2'd2 == value_in_V_0_state)))) begin
            value_in_V_0_state <= 2'd2;
        end else if ((((1'b1 == value_in_V_0_vld_in) & (1'b0 == value_in_V_0_ack_out) & (2'd3 == value_in_V_0_state)) | ((1'b0 == value_in_V_0_ack_out) & (2'd1 == value_in_V_0_state)))) begin
            value_in_V_0_state <= 2'd1;
        end else if ((((1'b1 == value_in_V_0_vld_in) & (2'd2 == value_in_V_0_state)) | ((1'b1 == value_in_V_0_ack_out) & (2'd1 == value_in_V_0_state)) | ((2'd3 == value_in_V_0_state) & ~((1'b1 == value_in_V_0_vld_in) & (1'b0 == value_in_V_0_ack_out)) & ~((1'b0 == value_in_V_0_vld_in) & (1'b1 == value_in_V_0_ack_out))))) begin
            value_in_V_0_state <= 2'd3;
        end else begin
            value_in_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        value_out_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == value_out_V_1_ack_out) & (1'b1 == value_out_V_1_vld_out))) begin
            value_out_V_1_sel_rd <= ~value_out_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        value_out_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == value_out_V_1_vld_in) & (1'b1 == value_out_V_1_ack_in))) begin
            value_out_V_1_sel_wr <= ~value_out_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        value_out_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == value_out_V_1_vld_in) & (1'b1 == value_out_V_1_ack_out) & (2'd3 == value_out_V_1_state)) | ((1'b0 == value_out_V_1_vld_in) & (2'd2 == value_out_V_1_state)))) begin
            value_out_V_1_state <= 2'd2;
        end else if ((((1'b1 == value_out_V_1_vld_in) & (1'b0 == value_out_V_1_ack_out) & (2'd3 == value_out_V_1_state)) | ((1'b0 == value_out_V_1_ack_out) & (2'd1 == value_out_V_1_state)))) begin
            value_out_V_1_state <= 2'd1;
        end else if ((((1'b1 == value_out_V_1_vld_in) & (2'd2 == value_out_V_1_state)) | ((1'b1 == value_out_V_1_ack_out) & (2'd1 == value_out_V_1_state)) | ((2'd3 == value_out_V_1_state) & ~((1'b1 == value_out_V_1_vld_in) & (1'b0 == value_out_V_1_ack_out)) & ~((1'b0 == value_out_V_1_vld_in) & (1'b1 == value_out_V_1_ack_out))))) begin
            value_out_V_1_state <= 2'd3;
        end else begin
            value_out_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_822 == 1'b1)) begin
        if ((1'd0 == tmp_2_reg_896)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190 <= writeBuffer_load_s_reg_889;
        end else if ((1'd1 == tmp_2_reg_896)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190 <= tmp_5_fu_295_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190 <= ap_phi_precharge_reg_pp0_iter0_tmp_6_reg_190;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_822 == 1'b1)) begin
        if ((1'd0 == tmp_2_reg_896)) begin
            ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167 <= not_tmp_1_fu_279_p2;
        end else if ((1'd1 == tmp_2_reg_896)) begin
            ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167 <= ap_phi_precharge_reg_pp0_iter0_writeBuffer_flag_1_reg_167;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_822 == 1'b1)) begin
        if ((1'd0 == tmp_2_reg_896)) begin
            ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179 <= 32'd0;
        end else if ((1'd1 == tmp_2_reg_896)) begin
            ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179 <= tmp_5_fu_295_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179 <= ap_phi_precharge_reg_pp0_iter0_writeBuffer_new_1_reg_179;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter10_buffer_load_4_reg_1097 <= ap_reg_pp0_iter9_buffer_load_4_reg_1097;
        ap_reg_pp0_iter11_buffer_load_4_reg_1097 <= ap_reg_pp0_iter10_buffer_load_4_reg_1097;
        ap_reg_pp0_iter2_buffer_load_4_reg_1097 <= buffer_load_4_reg_1097;
        ap_reg_pp0_iter2_tmp_29_reg_1092 <= tmp_29_reg_1092;
        ap_reg_pp0_iter3_buffer_load_4_reg_1097 <= ap_reg_pp0_iter2_buffer_load_4_reg_1097;
        ap_reg_pp0_iter4_buffer_load_4_reg_1097 <= ap_reg_pp0_iter3_buffer_load_4_reg_1097;
        ap_reg_pp0_iter5_buffer_load_4_reg_1097 <= ap_reg_pp0_iter4_buffer_load_4_reg_1097;
        ap_reg_pp0_iter6_buffer_load_4_reg_1097 <= ap_reg_pp0_iter5_buffer_load_4_reg_1097;
        ap_reg_pp0_iter6_outAccumulate1_reg_1147 <= outAccumulate1_reg_1147;
        ap_reg_pp0_iter7_buffer_load_4_reg_1097 <= ap_reg_pp0_iter6_buffer_load_4_reg_1097;
        ap_reg_pp0_iter7_outAccumulate1_reg_1147 <= ap_reg_pp0_iter6_outAccumulate1_reg_1147;
        ap_reg_pp0_iter8_buffer_load_4_reg_1097 <= ap_reg_pp0_iter7_buffer_load_4_reg_1097;
        ap_reg_pp0_iter8_outAccumulate1_reg_1147 <= ap_reg_pp0_iter7_outAccumulate1_reg_1147;
        ap_reg_pp0_iter9_buffer_load_4_reg_1097 <= ap_reg_pp0_iter8_buffer_load_4_reg_1097;
        not_tmp_1_reg_900 <= not_tmp_1_fu_279_p2;
        outAccumulate1_reg_1147 <= outAccumulate1_fu_817_p3;
        readBuffer3_load_s_reg_916 <= readBuffer3_load_s_fu_284_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter10_outAccumulate_2_reg_1171 <= outAccumulate_2_reg_1171;
        ap_reg_pp0_iter10_sel_tmp_reg_1046 <= ap_reg_pp0_iter9_sel_tmp_reg_1046;
        ap_reg_pp0_iter10_tmp_36_reg_1036 <= ap_reg_pp0_iter9_tmp_36_reg_1036;
        ap_reg_pp0_iter11_outAccumulate_2_reg_1171 <= ap_reg_pp0_iter10_outAccumulate_2_reg_1171;
        ap_reg_pp0_iter11_sel_tmp_reg_1046 <= ap_reg_pp0_iter10_sel_tmp_reg_1046;
        ap_reg_pp0_iter11_tmp_36_reg_1036 <= ap_reg_pp0_iter10_tmp_36_reg_1036;
        ap_reg_pp0_iter2_sel_tmp11_reg_1064 <= sel_tmp11_reg_1064;
        ap_reg_pp0_iter2_sel_tmp3_reg_1055 <= sel_tmp3_reg_1055;
        ap_reg_pp0_iter2_sel_tmp_reg_1046 <= sel_tmp_reg_1046;
        ap_reg_pp0_iter2_tmp_36_reg_1036 <= tmp_36_reg_1036;
        ap_reg_pp0_iter3_sel_tmp11_reg_1064 <= ap_reg_pp0_iter2_sel_tmp11_reg_1064;
        ap_reg_pp0_iter3_sel_tmp3_reg_1055 <= ap_reg_pp0_iter2_sel_tmp3_reg_1055;
        ap_reg_pp0_iter3_sel_tmp_reg_1046 <= ap_reg_pp0_iter2_sel_tmp_reg_1046;
        ap_reg_pp0_iter3_tmp_36_reg_1036 <= ap_reg_pp0_iter2_tmp_36_reg_1036;
        ap_reg_pp0_iter4_sel_tmp11_reg_1064 <= ap_reg_pp0_iter3_sel_tmp11_reg_1064;
        ap_reg_pp0_iter4_sel_tmp3_reg_1055 <= ap_reg_pp0_iter3_sel_tmp3_reg_1055;
        ap_reg_pp0_iter4_sel_tmp_reg_1046 <= ap_reg_pp0_iter3_sel_tmp_reg_1046;
        ap_reg_pp0_iter4_tmp_36_reg_1036 <= ap_reg_pp0_iter3_tmp_36_reg_1036;
        ap_reg_pp0_iter5_sel_tmp11_reg_1064 <= ap_reg_pp0_iter4_sel_tmp11_reg_1064;
        ap_reg_pp0_iter5_sel_tmp3_reg_1055 <= ap_reg_pp0_iter4_sel_tmp3_reg_1055;
        ap_reg_pp0_iter5_sel_tmp_reg_1046 <= ap_reg_pp0_iter4_sel_tmp_reg_1046;
        ap_reg_pp0_iter5_tmp_20_reg_1132 <= tmp_20_reg_1132;
        ap_reg_pp0_iter5_tmp_36_reg_1036 <= ap_reg_pp0_iter4_tmp_36_reg_1036;
        ap_reg_pp0_iter6_sel_tmp11_reg_1064 <= ap_reg_pp0_iter5_sel_tmp11_reg_1064;
        ap_reg_pp0_iter6_sel_tmp3_reg_1055 <= ap_reg_pp0_iter5_sel_tmp3_reg_1055;
        ap_reg_pp0_iter6_sel_tmp_reg_1046 <= ap_reg_pp0_iter5_sel_tmp_reg_1046;
        ap_reg_pp0_iter6_tmp_36_reg_1036 <= ap_reg_pp0_iter5_tmp_36_reg_1036;
        ap_reg_pp0_iter7_sel_tmp11_reg_1064 <= ap_reg_pp0_iter6_sel_tmp11_reg_1064;
        ap_reg_pp0_iter7_sel_tmp3_reg_1055 <= ap_reg_pp0_iter6_sel_tmp3_reg_1055;
        ap_reg_pp0_iter7_sel_tmp_reg_1046 <= ap_reg_pp0_iter6_sel_tmp_reg_1046;
        ap_reg_pp0_iter7_tmp_36_reg_1036 <= ap_reg_pp0_iter6_tmp_36_reg_1036;
        ap_reg_pp0_iter8_sel_tmp11_reg_1064 <= ap_reg_pp0_iter7_sel_tmp11_reg_1064;
        ap_reg_pp0_iter8_sel_tmp3_reg_1055 <= ap_reg_pp0_iter7_sel_tmp3_reg_1055;
        ap_reg_pp0_iter8_sel_tmp_reg_1046 <= ap_reg_pp0_iter7_sel_tmp_reg_1046;
        ap_reg_pp0_iter8_tmp_36_reg_1036 <= ap_reg_pp0_iter7_tmp_36_reg_1036;
        ap_reg_pp0_iter9_sel_tmp11_reg_1064 <= ap_reg_pp0_iter8_sel_tmp11_reg_1064;
        ap_reg_pp0_iter9_sel_tmp3_reg_1055 <= ap_reg_pp0_iter8_sel_tmp3_reg_1055;
        ap_reg_pp0_iter9_sel_tmp_reg_1046 <= ap_reg_pp0_iter8_sel_tmp_reg_1046;
        ap_reg_pp0_iter9_tmp_36_reg_1036 <= ap_reg_pp0_iter8_tmp_36_reg_1036;
        outAccumulate_2_reg_1171 <= outAccumulate_2_fu_830_p3;
        sel_tmp11_reg_1064 <= sel_tmp11_fu_685_p2;
        sel_tmp3_reg_1055 <= sel_tmp3_fu_631_p2;
        sel_tmp_reg_1046 <= sel_tmp_fu_597_p2;
        tmp_1_reg_879 <= tmp_1_fu_251_p2;
        tmp_2_reg_896 <= tmp_2_fu_269_p2;
        tmp_36_reg_1036 <= tmp_36_fu_495_p2;
        tmp_9_reg_1025 <= grp_fu_231_p1;
        writeBuffer_load_s_reg_889 <= writeBuffer_load_s_fu_261_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter10_sel_tmp19_reg_1178 <= sel_tmp19_reg_1178;
        ap_reg_pp0_iter10_tmp_40_reg_1142 <= ap_reg_pp0_iter9_tmp_40_reg_1142;
        ap_reg_pp0_iter11_sel_tmp19_reg_1178 <= ap_reg_pp0_iter10_sel_tmp19_reg_1178;
        ap_reg_pp0_iter2_tmp_10_reg_1077 <= tmp_10_reg_1077;
        ap_reg_pp0_iter2_tmp_19_reg_1082 <= tmp_19_reg_1082;
        ap_reg_pp0_iter5_tmp_30_reg_1137 <= tmp_30_reg_1137;
        ap_reg_pp0_iter5_tmp_40_reg_1142 <= tmp_40_reg_1142;
        ap_reg_pp0_iter6_tmp_30_reg_1137 <= ap_reg_pp0_iter5_tmp_30_reg_1137;
        ap_reg_pp0_iter6_tmp_40_reg_1142 <= ap_reg_pp0_iter5_tmp_40_reg_1142;
        ap_reg_pp0_iter7_tmp_30_reg_1137 <= ap_reg_pp0_iter6_tmp_30_reg_1137;
        ap_reg_pp0_iter7_tmp_40_reg_1142 <= ap_reg_pp0_iter6_tmp_40_reg_1142;
        ap_reg_pp0_iter8_outAccumulate_1_reg_1159 <= outAccumulate_1_reg_1159;
        ap_reg_pp0_iter8_tmp_40_reg_1142 <= ap_reg_pp0_iter7_tmp_40_reg_1142;
        ap_reg_pp0_iter9_tmp_40_reg_1142 <= ap_reg_pp0_iter8_tmp_40_reg_1142;
        outAccumulate_1_reg_1159 <= outAccumulate_1_fu_824_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter2_tmp_16_reg_972 <= tmp_16_reg_972;
        ap_reg_pp0_iter2_tmp_26_reg_995 <= tmp_26_reg_995;
        ap_reg_pp0_iter2_tmp_7_reg_936 <= tmp_7_reg_936;
        ap_reg_pp0_iter2_tmp_8_reg_949 <= tmp_8_reg_949;
        ap_reg_pp0_iter3_tmp_16_reg_972 <= ap_reg_pp0_iter2_tmp_16_reg_972;
        ap_reg_pp0_iter3_tmp_26_reg_995 <= ap_reg_pp0_iter2_tmp_26_reg_995;
        ap_reg_pp0_iter3_tmp_39_reg_1102 <= tmp_39_reg_1102;
        ap_reg_pp0_iter3_tmp_7_reg_936 <= ap_reg_pp0_iter2_tmp_7_reg_936;
        ap_reg_pp0_iter3_tmp_8_reg_949 <= ap_reg_pp0_iter2_tmp_8_reg_949;
        ap_reg_pp0_iter4_tmp_16_reg_972 <= ap_reg_pp0_iter3_tmp_16_reg_972;
        ap_reg_pp0_iter4_tmp_26_reg_995 <= ap_reg_pp0_iter3_tmp_26_reg_995;
        ap_reg_pp0_iter4_tmp_7_reg_936 <= ap_reg_pp0_iter3_tmp_7_reg_936;
        ap_reg_pp0_iter4_tmp_8_reg_949 <= ap_reg_pp0_iter3_tmp_8_reg_949;
        ap_reg_pp0_iter5_tmp_16_reg_972 <= ap_reg_pp0_iter4_tmp_16_reg_972;
        ap_reg_pp0_iter5_tmp_26_reg_995 <= ap_reg_pp0_iter4_tmp_26_reg_995;
        ap_reg_pp0_iter5_tmp_7_reg_936 <= ap_reg_pp0_iter4_tmp_7_reg_936;
        ap_reg_pp0_iter5_tmp_8_reg_949 <= ap_reg_pp0_iter4_tmp_8_reg_949;
        ap_reg_pp0_iter6_tmp_16_reg_972 <= ap_reg_pp0_iter5_tmp_16_reg_972;
        ap_reg_pp0_iter6_tmp_26_reg_995 <= ap_reg_pp0_iter5_tmp_26_reg_995;
        ap_reg_pp0_iter6_tmp_7_reg_936 <= ap_reg_pp0_iter5_tmp_7_reg_936;
        ap_reg_pp0_iter7_tmp_16_reg_972 <= ap_reg_pp0_iter6_tmp_16_reg_972;
        ap_reg_pp0_iter7_tmp_26_reg_995 <= ap_reg_pp0_iter6_tmp_26_reg_995;
        ap_reg_pp0_iter7_tmp_7_reg_936 <= ap_reg_pp0_iter6_tmp_7_reg_936;
        ap_reg_pp0_iter8_tmp_26_reg_995 <= ap_reg_pp0_iter7_tmp_26_reg_995;
        ap_reg_pp0_iter8_tmp_7_reg_936 <= ap_reg_pp0_iter7_tmp_7_reg_936;
        ap_reg_pp0_iter9_tmp_26_reg_995 <= ap_reg_pp0_iter8_tmp_26_reg_995;
        ap_reg_pp0_iter9_tmp_7_reg_936 <= ap_reg_pp0_iter8_tmp_7_reg_936;
        delayCount_load_s_reg_930 <= delayCount_load_s_fu_312_p3;
        delay_read_reg_871 <= delay;
        outAccumulate_7_reg_1188 <= outAccumulate_7_fu_860_p3;
        tmp_13_reg_961 <= tmp_13_fu_355_p2;
        tmp_15_reg_966 <= tmp_15_fu_369_p2;
        tmp_16_reg_972 <= tmp_16_fu_374_p2;
        tmp_23_reg_984 <= tmp_23_fu_385_p2;
        tmp_25_reg_989 <= tmp_25_fu_399_p2;
        tmp_26_reg_995 <= tmp_26_fu_404_p2;
        tmp_33_reg_1002 <= tmp_33_fu_409_p2;
        tmp_35_reg_1007 <= tmp_35_fu_421_p2;
        tmp_44_reg_1012 <= tmp_44_fu_426_p2;
        tmp_7_reg_936 <= tmp_7_fu_333_p2;
        tmp_8_reg_949 <= tmp_8_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        buffer_load_4_reg_1097 <= buffer_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == change_V_0_load_A)) begin
        change_V_0_payload_A <= change_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == change_V_0_load_B)) begin
        change_V_0_payload_B <= change_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        delayCount <= tmp_48_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'd1 == readBuffer1_flag_2_fu_603_p3))) begin
        readBuffer1 <= readBuffer1_new_2_fu_618_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'd1 == readBuffer2_flag_2_fu_649_p3))) begin
        readBuffer2 <= readBuffer2_new_2_fu_672_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'd1 == readBuffer3_flag_2_fu_711_p3))) begin
        readBuffer3 <= readBuffer3_new_2_fu_740_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'd1 == readBuffer4_flag_2_fu_748_p3))) begin
        readBuffer4 <= readBuffer4_new_2_fu_755_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'd0 == tmp_26_reg_995)))) begin
        reg_235 <= buffer_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_flag00011001 == 1'b0)))) begin
        reg_240 <= buffer_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter5) & (1'd0 == ap_reg_pp0_iter5_tmp_8_reg_949)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter7) & (1'd0 == ap_reg_pp0_iter7_tmp_16_reg_972)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_tmp_26_reg_995)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter11) & (ap_block_pp0_stage3_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter11_tmp_36_reg_1036) & (1'd1 == ap_reg_pp0_iter11_sel_tmp_reg_1046)))) begin
        reg_246 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter9_sel_tmp_reg_1046))) begin
        sel_tmp19_reg_1178 <= sel_tmp19_fu_847_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'd0 == tmp_8_reg_949))) begin
        tmp_10_reg_1077 <= grp_fu_208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (1'd0 == ap_reg_pp0_iter4_tmp_8_reg_949))) begin
        tmp_11_reg_1127 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter2_tmp_16_reg_972))) begin
        tmp_17_reg_1112 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'd0 == tmp_16_reg_972))) begin
        tmp_19_reg_1082 <= grp_fu_211_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (1'd0 == ap_reg_pp0_iter4_tmp_16_reg_972))) begin
        tmp_20_reg_1132 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter6) & (1'd0 == ap_reg_pp0_iter5_tmp_16_reg_972))) begin
        tmp_21_reg_1154 <= grp_fu_211_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3) & (1'd0 == ap_reg_pp0_iter2_tmp_26_reg_995))) begin
        tmp_27_reg_1117 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == tmp_26_reg_995) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        tmp_29_reg_1092 <= grp_fu_208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (1'd0 == ap_reg_pp0_iter4_tmp_26_reg_995))) begin
        tmp_30_reg_1137 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter7) & (ap_block_pp0_stage3_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter7_tmp_26_reg_995))) begin
        tmp_31_reg_1166 <= grp_fu_211_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3) & (1'd0 == ap_reg_pp0_iter2_tmp_36_reg_1036) & (1'd1 == ap_reg_pp0_iter2_sel_tmp_reg_1046))) begin
        tmp_37_reg_1122 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == tmp_36_reg_1036) & (1'd1 == sel_tmp_reg_1046))) begin
        tmp_39_reg_1102 <= grp_fu_208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (1'd0 == ap_reg_pp0_iter4_tmp_36_reg_1036) & (1'd1 == ap_reg_pp0_iter4_sel_tmp_reg_1046))) begin
        tmp_40_reg_1142 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (1'd0 == ap_reg_pp0_iter9_tmp_36_reg_1036) & (1'd1 == ap_reg_pp0_iter9_sel_tmp_reg_1046))) begin
        tmp_41_reg_1183 <= grp_fu_208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        tmp_6_reg_190 <= ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter2_tmp_8_reg_949))) begin
        tmp_s_reg_1107 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == value_in_V_0_load_A)) begin
        value_in_V_0_payload_A <= value_in_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == value_in_V_0_load_B)) begin
        value_in_V_0_payload_B <= value_in_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == value_out_V_1_load_A)) begin
        value_out_V_1_payload_A <= grp_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == value_out_V_1_load_B)) begin
        value_out_V_1_payload_B <= grp_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == writeBuffer_flag_1_phi_fu_171_p4))) begin
        writeBuffer <= ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179;
    end
end

always @ (*) begin
    if (((1'b0 == 1'b1) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12) & (1'b0 == ap_enable_reg_pp0_iter13))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
            buffer_r_address0 = tmp_50_fu_812_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            buffer_r_address0 = tmp_28_fu_475_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            buffer_r_address0 = tmp_4_fu_350_p1;
        end else begin
            buffer_r_address0 = 'bx;
        end
    end else begin
        buffer_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        buffer_r_address1 = tmp_38_fu_501_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer_r_address1 = tmp_18_fu_380_p1;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0))) begin
        buffer_r_address1 = tmp_3_fu_291_p1;
    end else begin
        buffer_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        buffer_r_ce0 = 1'b1;
    end else begin
        buffer_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        buffer_r_ce1 = 1'b1;
    end else begin
        buffer_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd1 == tmp_2_reg_896) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        buffer_r_we1 = 1'b1;
    end else begin
        buffer_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        change_V_0_ack_out = 1'b1;
    end else begin
        change_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == change_V_0_sel)) begin
        change_V_0_data_out = change_V_0_payload_B;
    end else begin
        change_V_0_data_out = change_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        change_V_TDATA_blk_n = change_V_0_state[1'd0];
    end else begin
        change_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)))) begin
        grp_fu_200_ce = 1'b1;
    end else begin
        grp_fu_200_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        grp_fu_208_p0 = outAccumulate_2_reg_1171;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        grp_fu_208_p0 = reg_240;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        grp_fu_208_p0 = reg_235;
    end else begin
        grp_fu_208_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter7))) begin
        grp_fu_211_p0 = outAccumulate_1_reg_1159;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        grp_fu_211_p0 = outAccumulate1_reg_1147;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_211_p0 = reg_240;
    end else begin
        grp_fu_211_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)))) begin
        grp_fu_214_ce = 1'b1;
    end else begin
        grp_fu_214_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        grp_fu_214_p0 = tmp_41_reg_1183;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter8))) begin
        grp_fu_214_p0 = tmp_31_reg_1166;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter6))) begin
        grp_fu_214_p0 = tmp_21_reg_1154;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        grp_fu_214_p0 = tmp_11_reg_1127;
    end else begin
        grp_fu_214_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        grp_fu_214_p1 = ap_reg_pp0_iter10_tmp_40_reg_1142;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter8))) begin
        grp_fu_214_p1 = ap_reg_pp0_iter7_tmp_30_reg_1137;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter6))) begin
        grp_fu_214_p1 = ap_reg_pp0_iter5_tmp_20_reg_1132;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        grp_fu_214_p1 = 64'd0;
    end else begin
        grp_fu_214_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)))) begin
        grp_fu_219_ce = 1'b1;
    end else begin
        grp_fu_219_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        grp_fu_219_p0 = tmp_27_reg_1117;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        grp_fu_219_p0 = tmp_s_reg_1107;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        grp_fu_219_p0 = tmp_9_reg_1025;
    end else begin
        grp_fu_219_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        grp_fu_219_p1 = ap_reg_pp0_iter2_tmp_29_reg_1092;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        grp_fu_219_p1 = ap_reg_pp0_iter2_tmp_10_reg_1077;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_219_p1 = 64'd4593671619917905920;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_219_p1 = 64'd4602678819172646912;
    end else begin
        grp_fu_219_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)))) begin
        grp_fu_224_ce = 1'b1;
    end else begin
        grp_fu_224_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        grp_fu_224_p0 = tmp_37_reg_1122;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        grp_fu_224_p0 = tmp_17_reg_1112;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        grp_fu_224_p0 = tmp_9_reg_1025;
    end else begin
        grp_fu_224_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        grp_fu_224_p1 = ap_reg_pp0_iter3_tmp_39_reg_1102;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        grp_fu_224_p1 = ap_reg_pp0_iter2_tmp_19_reg_1082;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_224_p1 = 64'd4589168020290535424;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_224_p1 = 64'd4598175219545276416;
    end else begin
        grp_fu_224_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)))) begin
        grp_fu_231_ce = 1'b1;
    end else begin
        grp_fu_231_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd1 == tmp_2_reg_896) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        value_in_V_0_ack_out = 1'b1;
    end else begin
        value_in_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == value_in_V_0_sel)) begin
        value_in_V_0_data_out = value_in_V_0_payload_B;
    end else begin
        value_in_V_0_data_out = value_in_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0) & (1'd1 == tmp_2_reg_896))) begin
        value_in_V_TDATA_blk_n = value_in_V_0_state[1'd0];
    end else begin
        value_in_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == value_out_V_1_sel)) begin
        value_out_V_1_data_out = value_out_V_1_payload_B;
    end else begin
        value_out_V_1_data_out = value_out_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter13) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        value_out_V_1_vld_in = 1'b1;
    end else begin
        value_out_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter13)) | ((1'b1 == ap_enable_reg_pp0_iter13) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0)))) begin
        value_out_V_TDATA_blk_n = value_out_V_1_state[1'd1];
    end else begin
        value_out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_block_pp0_stage2_flag00011011 == 1'b0) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((ap_block_pp0_stage2_flag00011011 == 1'b0) & (1'b1 == ap_reset_idle_pp0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_flag00001001 = ((1'b1 == 1'b1) & (1'b0 == change_V_0_vld_out));
end

always @ (*) begin
    ap_block_pp0_stage1_flag00011001 = (((1'b1 == 1'b1) & (1'b0 == change_V_0_vld_out)) | ((1'b1 == ap_enable_reg_pp0_iter13) & (1'b0 == value_out_V_1_ack_in)));
end

always @ (*) begin
    ap_block_pp0_stage1_flag00011011 = (((1'b1 == 1'b1) & (1'b0 == change_V_0_vld_out)) | ((1'b1 == ap_enable_reg_pp0_iter13) & (1'b0 == value_out_V_1_ack_in)));
end

assign ap_block_pp0_stage2_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_flag00001001 = ((1'b1 == ap_enable_reg_pp0_iter13) & (1'b0 == value_out_V_1_ack_in));
end

always @ (*) begin
    ap_block_pp0_stage2_flag00011001 = ((1'b1 == ap_enable_reg_pp0_iter13) & (1'b0 == value_out_V_1_ack_in));
end

always @ (*) begin
    ap_block_pp0_stage2_flag00011011 = ((1'b1 == ap_enable_reg_pp0_iter13) & (1'b0 == value_out_V_1_ack_in));
end

assign ap_block_pp0_stage3_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_flag00011001 = ((1'b1 == 1'b1) & (1'd1 == tmp_2_reg_896) & (1'b0 == value_in_V_0_vld_out));
end

always @ (*) begin
    ap_block_pp0_stage3_flag00011011 = ((1'b1 == 1'b1) & (1'd1 == tmp_2_reg_896) & (1'b0 == value_in_V_0_vld_out));
end

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (1'b0 == change_V_0_vld_out);
end

assign ap_block_state30_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((1'd1 == tmp_2_reg_896) & (1'b0 == value_in_V_0_vld_out));
end

assign ap_block_state50_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state55_pp0_stage2_iter13 = (1'b0 == value_out_V_1_ack_in);
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_822 = ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_precharge_reg_pp0_iter0_tmp_6_reg_190 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_writeBuffer_flag_1_reg_167 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_writeBuffer_new_1_reg_179 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign change_V_0_ack_in = change_V_0_state[1'd1];

assign change_V_0_load_A = (change_V_0_state_cmp_full & ~change_V_0_sel_wr);

assign change_V_0_load_B = (change_V_0_sel_wr & change_V_0_state_cmp_full);

assign change_V_0_sel = change_V_0_sel_rd;

assign change_V_0_state_cmp_full = ((change_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign change_V_0_vld_in = change_V_TVALID;

assign change_V_0_vld_out = change_V_0_state[1'd0];

assign change_V_TREADY = change_V_0_state[1'd1];

assign delayCount_load_s_fu_312_p3 = ((tmp_1_reg_879[0:0] === 1'b1) ? delayCount : 32'd0);

assign not_tmp_1_fu_279_p2 = (tmp_1_reg_879 ^ 1'd1);

assign not_tmp_2_fu_479_p2 = (tmp_26_reg_995 ^ 1'd1);

assign not_tmp_3_fu_512_p2 = (tmp_36_fu_495_p2 ^ 1'd1);

assign not_tmp_8_fu_443_p2 = (tmp_8_reg_949 ^ 1'd1);

assign not_tmp_s_fu_459_p2 = (tmp_16_reg_972 ^ 1'd1);

assign outAccumulate1_fu_817_p3 = ((ap_reg_pp0_iter5_tmp_8_reg_949[0:0] === 1'b1) ? 32'd0 : grp_fu_205_p1);

assign outAccumulate_1_fu_824_p3 = ((ap_reg_pp0_iter7_tmp_16_reg_972[0:0] === 1'b1) ? ap_reg_pp0_iter6_outAccumulate1_reg_1147 : grp_fu_205_p1);

assign outAccumulate_2_fu_830_p3 = ((ap_reg_pp0_iter9_tmp_26_reg_995[0:0] === 1'b1) ? ap_reg_pp0_iter8_outAccumulate_1_reg_1159 : grp_fu_205_p1);

assign outAccumulate_3_fu_854_p3 = ((ap_reg_pp0_iter11_tmp_36_reg_1036[0:0] === 1'b1) ? ap_reg_pp0_iter11_outAccumulate_2_reg_1171 : grp_fu_205_p1);

assign outAccumulate_7_fu_860_p3 = ((ap_reg_pp0_iter11_sel_tmp_reg_1046[0:0] === 1'b1) ? outAccumulate_3_fu_854_p3 : ap_reg_pp0_iter11_sel_tmp19_reg_1178);

assign p_delayCount_load_s_fu_577_p3 = ((tmp_44_reg_1012[0:0] === 1'b1) ? 32'd0 : delayCount_load_s_reg_930);

assign p_readBuffer1_flag_1_fu_518_p2 = (tmp_44_reg_1012 | readBuffer1_flag_1_fu_448_p2);

assign p_readBuffer1_new_1_fu_523_p3 = ((tmp_44_reg_1012[0:0] === 1'b1) ? 32'd0 : readBuffer1_new_1_fu_453_p3);

assign p_readBuffer2_flag_1_fu_530_p2 = (tmp_44_reg_1012 | readBuffer2_flag_1_fu_464_p2);

assign p_readBuffer2_new_1_fu_535_p3 = ((tmp_44_reg_1012[0:0] === 1'b1) ? 32'd0 : readBuffer2_new_1_fu_469_p3);

assign p_readBuffer3_flag_1_fu_542_p2 = (tmp_44_reg_1012 | readBuffer3_flag_1_fu_484_p2);

assign p_readBuffer3_new_1_fu_547_p3 = ((tmp_44_reg_1012[0:0] === 1'b1) ? 32'd0 : readBuffer3_new_1_fu_489_p3);

assign p_readBuffer4_flag_1_fu_558_p2 = (tmp5_fu_554_p2 | not_tmp_3_fu_512_p2);

assign p_readBuffer4_new_1_fu_569_p3 = ((tmp_45_fu_564_p2[0:0] === 1'b1) ? 32'd0 : tmp_43_fu_506_p2);

assign readBuffer1_flag_1_fu_448_p2 = (not_tmp_8_fu_443_p2 | not_tmp_1_reg_900);

assign readBuffer1_flag_2_fu_603_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_readBuffer1_flag_1_fu_518_p2 : sel_tmp8_fu_583_p3);

assign readBuffer1_load_s_fu_319_p3 = ((tmp_1_reg_879[0:0] === 1'b1) ? readBuffer1 : 32'd0);

assign readBuffer1_new_1_fu_453_p3 = ((tmp_8_reg_949[0:0] === 1'b1) ? 32'd0 : tmp_13_reg_961);

assign readBuffer1_new_2_fu_618_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_readBuffer1_new_1_fu_523_p3 : sel_tmp1_fu_611_p3);

assign readBuffer2_flag_1_fu_464_p2 = (not_tmp_s_fu_459_p2 | not_tmp_1_reg_900);

assign readBuffer2_flag_2_fu_649_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_readBuffer2_flag_1_fu_530_p2 : sel_tmp5_fu_643_p3);

assign readBuffer2_load_s_fu_326_p3 = ((tmp_1_reg_879[0:0] === 1'b1) ? readBuffer2 : 32'd0);

assign readBuffer2_new_1_fu_469_p3 = ((tmp_16_reg_972[0:0] === 1'b1) ? 32'd0 : tmp_23_reg_984);

assign readBuffer2_new_2_fu_672_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_readBuffer2_new_1_fu_535_p3 : sel_tmp7_fu_665_p3);

assign readBuffer3_flag_1_fu_484_p2 = (not_tmp_2_fu_479_p2 | not_tmp_1_reg_900);

assign readBuffer3_flag_2_fu_711_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_readBuffer3_flag_1_fu_542_p2 : sel_tmp14_fu_705_p3);

assign readBuffer3_load_s_fu_284_p3 = ((tmp_1_reg_879[0:0] === 1'b1) ? readBuffer3 : 32'd0);

assign readBuffer3_new_1_fu_489_p3 = ((tmp_26_reg_995[0:0] === 1'b1) ? 32'd0 : tmp_33_reg_1002);

assign readBuffer3_new_2_fu_740_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_readBuffer3_new_1_fu_547_p3 : sel_tmp16_fu_733_p3);

assign readBuffer4_flag_2_fu_748_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_readBuffer4_flag_1_fu_558_p2 : not_tmp_1_reg_900);

assign readBuffer4_load_s_fu_436_p3 = ((tmp_1_reg_879[0:0] === 1'b1) ? readBuffer4 : 32'd0);

assign readBuffer4_new_2_fu_755_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_readBuffer4_new_1_fu_569_p3 : 32'd0);

assign sel_tmp10_fu_680_p2 = (tmp_25_reg_989 ^ 1'd1);

assign sel_tmp11_fu_685_p2 = (sel_tmp9_fu_589_p2 & sel_tmp10_fu_680_p2);

assign sel_tmp12_fu_691_p3 = ((sel_tmp11_fu_685_p2[0:0] === 1'b1) ? not_tmp_1_reg_900 : readBuffer3_flag_1_fu_484_p2);

assign sel_tmp13_fu_698_p3 = ((sel_tmp3_fu_631_p2[0:0] === 1'b1) ? not_tmp_1_reg_900 : sel_tmp12_fu_691_p3);

assign sel_tmp14_fu_705_p3 = ((tmp_7_reg_936[0:0] === 1'b1) ? sel_tmp13_fu_698_p3 : not_tmp_1_reg_900);

assign sel_tmp15_fu_725_p3 = ((tmp_46_fu_719_p2[0:0] === 1'b1) ? 32'd0 : readBuffer3_new_1_fu_489_p3);

assign sel_tmp16_fu_733_p3 = ((tmp_7_reg_936[0:0] === 1'b1) ? sel_tmp15_fu_725_p3 : 32'd0);

assign sel_tmp17_fu_836_p3 = ((ap_reg_pp0_iter9_sel_tmp11_reg_1064[0:0] === 1'b1) ? ap_reg_pp0_iter8_outAccumulate_1_reg_1159 : outAccumulate_2_reg_1171);

assign sel_tmp18_fu_841_p3 = ((ap_reg_pp0_iter9_sel_tmp3_reg_1055[0:0] === 1'b1) ? ap_reg_pp0_iter8_outAccumulate1_reg_1147 : sel_tmp17_fu_836_p3);

assign sel_tmp19_fu_847_p3 = ((ap_reg_pp0_iter9_tmp_7_reg_936[0:0] === 1'b1) ? sel_tmp18_fu_841_p3 : 32'd0);

assign sel_tmp1_fu_611_p3 = ((tmp_7_reg_936[0:0] === 1'b1) ? readBuffer1_new_1_fu_453_p3 : 32'd0);

assign sel_tmp2_fu_626_p2 = (tmp_15_reg_966 ^ 1'd1);

assign sel_tmp3_fu_631_p2 = (tmp_7_reg_936 & sel_tmp2_fu_626_p2);

assign sel_tmp4_fu_636_p3 = ((sel_tmp3_fu_631_p2[0:0] === 1'b1) ? not_tmp_1_reg_900 : readBuffer2_flag_1_fu_464_p2);

assign sel_tmp5_fu_643_p3 = ((tmp_7_reg_936[0:0] === 1'b1) ? sel_tmp4_fu_636_p3 : not_tmp_1_reg_900);

assign sel_tmp6_fu_657_p3 = ((sel_tmp3_fu_631_p2[0:0] === 1'b1) ? 32'd0 : readBuffer2_new_1_fu_469_p3);

assign sel_tmp7_fu_665_p3 = ((tmp_7_reg_936[0:0] === 1'b1) ? sel_tmp6_fu_657_p3 : 32'd0);

assign sel_tmp8_fu_583_p3 = ((tmp_7_reg_936[0:0] === 1'b1) ? readBuffer1_flag_1_fu_448_p2 : not_tmp_1_reg_900);

assign sel_tmp9_fu_589_p2 = (tmp_7_reg_936 & tmp_15_reg_966);

assign sel_tmp_fu_597_p2 = (tmp6_fu_593_p2 & sel_tmp9_fu_589_p2);

assign tmp5_fu_554_p2 = (tmp_44_reg_1012 | not_tmp_1_reg_900);

assign tmp6_fu_593_p2 = (tmp_25_reg_989 & tmp_35_reg_1007);

assign tmp_13_fu_355_p2 = (readBuffer1_load_s_fu_319_p3 + 32'd1);

assign tmp_14_fu_361_p3 = ((tmp_8_fu_344_p2[0:0] === 1'b1) ? readBuffer1_load_s_fu_319_p3 : tmp_13_fu_355_p2);

assign tmp_15_fu_369_p2 = (($signed(tmp_14_fu_361_p3) > $signed(delay_read_reg_871)) ? 1'b1 : 1'b0);

assign tmp_16_fu_374_p2 = (($signed(readBuffer2_load_s_fu_326_p3) > $signed(ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190)) ? 1'b1 : 1'b0);

assign tmp_18_fu_380_p1 = $signed(readBuffer2_load_s_fu_326_p3);

assign tmp_1_fu_251_p2 = ((change_V_0_data_out == 32'd0) ? 1'b1 : 1'b0);

assign tmp_23_fu_385_p2 = (readBuffer2_load_s_fu_326_p3 + 32'd1);

assign tmp_24_fu_391_p3 = ((tmp_16_fu_374_p2[0:0] === 1'b1) ? readBuffer2_load_s_fu_326_p3 : tmp_23_fu_385_p2);

assign tmp_25_fu_399_p2 = (($signed(tmp_24_fu_391_p3) > $signed(delay_read_reg_871)) ? 1'b1 : 1'b0);

assign tmp_26_fu_404_p2 = (($signed(readBuffer3_load_s_reg_916) > $signed(ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190)) ? 1'b1 : 1'b0);

assign tmp_28_fu_475_p1 = $signed(readBuffer3_load_s_reg_916);

assign tmp_2_fu_269_p2 = (($signed(writeBuffer_load_s_fu_261_p3) < $signed(32'd48000)) ? 1'b1 : 1'b0);

assign tmp_33_fu_409_p2 = (readBuffer3_load_s_reg_916 + 32'd1);

assign tmp_34_fu_414_p3 = ((tmp_26_fu_404_p2[0:0] === 1'b1) ? readBuffer3_load_s_reg_916 : tmp_33_fu_409_p2);

assign tmp_35_fu_421_p2 = (($signed(tmp_34_fu_414_p3) > $signed(delay_read_reg_871)) ? 1'b1 : 1'b0);

assign tmp_36_fu_495_p2 = (($signed(readBuffer4_load_s_fu_436_p3) > $signed(tmp_6_reg_190)) ? 1'b1 : 1'b0);

assign tmp_38_fu_501_p1 = $signed(readBuffer4_load_s_fu_436_p3);

assign tmp_3_fu_291_p1 = $signed(writeBuffer_load_s_reg_889);

assign tmp_43_fu_506_p2 = (readBuffer4_load_s_fu_436_p3 + 32'd1);

assign tmp_44_fu_426_p2 = ((tmp_34_fu_414_p3 == ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190) ? 1'b1 : 1'b0);

assign tmp_45_fu_564_p2 = (tmp_44_reg_1012 | tmp_36_fu_495_p2);

assign tmp_46_fu_719_p2 = (sel_tmp3_fu_631_p2 | sel_tmp11_fu_685_p2);

assign tmp_47_fu_763_p3 = ((sel_tmp_fu_597_p2[0:0] === 1'b1) ? p_delayCount_load_s_fu_577_p3 : delayCount_load_s_reg_930);

assign tmp_48_fu_770_p2 = (tmp_47_fu_763_p3 + 32'd1);

assign tmp_49_fu_806_p2 = ($signed(tmp_6_reg_190) + $signed(32'd4294967295));

assign tmp_4_fu_350_p1 = $signed(readBuffer1_load_s_fu_319_p3);

assign tmp_50_fu_812_p1 = $signed(tmp_49_fu_806_p2);

assign tmp_5_fu_295_p2 = (writeBuffer_load_s_reg_889 + 32'd1);

assign tmp_7_fu_333_p2 = (($signed(delayCount_load_s_fu_312_p3) > $signed(delay_read_reg_871)) ? 1'b1 : 1'b0);

assign tmp_8_fu_344_p2 = (($signed(readBuffer1_load_s_fu_319_p3) > $signed(ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190)) ? 1'b1 : 1'b0);

assign value_in_V_0_ack_in = value_in_V_0_state[1'd1];

assign value_in_V_0_load_A = (value_in_V_0_state_cmp_full & ~value_in_V_0_sel_wr);

assign value_in_V_0_load_B = (value_in_V_0_sel_wr & value_in_V_0_state_cmp_full);

assign value_in_V_0_sel = value_in_V_0_sel_rd;

assign value_in_V_0_state_cmp_full = ((value_in_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign value_in_V_0_vld_in = value_in_V_TVALID;

assign value_in_V_0_vld_out = value_in_V_0_state[1'd0];

assign value_in_V_TREADY = value_in_V_0_state[1'd1];

assign value_out_V_1_ack_in = value_out_V_1_state[1'd1];

assign value_out_V_1_ack_out = value_out_V_TREADY;

assign value_out_V_1_load_A = (value_out_V_1_state_cmp_full & ~value_out_V_1_sel_wr);

assign value_out_V_1_load_B = (value_out_V_1_sel_wr & value_out_V_1_state_cmp_full);

assign value_out_V_1_sel = value_out_V_1_sel_rd;

assign value_out_V_1_state_cmp_full = ((value_out_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign value_out_V_1_vld_out = value_out_V_1_state[1'd0];

assign value_out_V_TDATA = value_out_V_1_data_out;

assign value_out_V_TVALID = value_out_V_1_state[1'd0];

assign writeBuffer_flag_1_phi_fu_171_p4 = ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167;

assign writeBuffer_load_s_fu_261_p3 = ((tmp_1_fu_251_p2[0:0] === 1'b1) ? writeBuffer : 32'd0);

endmodule //Echo
