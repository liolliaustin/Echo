-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Echo is
generic (
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    change_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    change_V_TVALID : IN STD_LOGIC;
    change_V_TREADY : OUT STD_LOGIC;
    value_in_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    value_in_V_TVALID : IN STD_LOGIC;
    value_in_V_TREADY : OUT STD_LOGIC;
    value_out_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    value_out_V_TVALID : OUT STD_LOGIC;
    value_out_V_TREADY : IN STD_LOGIC;
    scale : IN STD_LOGIC_VECTOR (31 downto 0);
    s_axi_CTRL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of Echo is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Echo,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z100ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.598000,HLS_SYN_LAT=54,HLS_SYN_TPT=4,HLS_SYN_MEM=128,HLS_SYN_DSP=27,HLS_SYN_FF=6140,HLS_SYN_LUT=6667}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FC0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FD0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111010000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FB0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111110110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_BB80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001011101110000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal change_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal change_V_0_vld_in : STD_LOGIC;
    signal change_V_0_vld_out : STD_LOGIC;
    signal change_V_0_ack_in : STD_LOGIC;
    signal change_V_0_ack_out : STD_LOGIC;
    signal change_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal change_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal change_V_0_sel_rd : STD_LOGIC := '0';
    signal change_V_0_sel_wr : STD_LOGIC := '0';
    signal change_V_0_sel : STD_LOGIC;
    signal change_V_0_load_A : STD_LOGIC;
    signal change_V_0_load_B : STD_LOGIC;
    signal change_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal change_V_0_state_cmp_full : STD_LOGIC;
    signal value_in_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal value_in_V_0_vld_in : STD_LOGIC;
    signal value_in_V_0_vld_out : STD_LOGIC;
    signal value_in_V_0_ack_in : STD_LOGIC;
    signal value_in_V_0_ack_out : STD_LOGIC;
    signal value_in_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal value_in_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal value_in_V_0_sel_rd : STD_LOGIC := '0';
    signal value_in_V_0_sel_wr : STD_LOGIC := '0';
    signal value_in_V_0_sel : STD_LOGIC;
    signal value_in_V_0_load_A : STD_LOGIC;
    signal value_in_V_0_load_B : STD_LOGIC;
    signal value_in_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal value_in_V_0_state_cmp_full : STD_LOGIC;
    signal value_out_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal value_out_V_1_vld_in : STD_LOGIC;
    signal value_out_V_1_vld_out : STD_LOGIC;
    signal value_out_V_1_ack_in : STD_LOGIC;
    signal value_out_V_1_ack_out : STD_LOGIC;
    signal value_out_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal value_out_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal value_out_V_1_sel_rd : STD_LOGIC := '0';
    signal value_out_V_1_sel_wr : STD_LOGIC := '0';
    signal value_out_V_1_sel : STD_LOGIC;
    signal value_out_V_1_load_A : STD_LOGIC;
    signal value_out_V_1_load_B : STD_LOGIC;
    signal value_out_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal value_out_V_1_state_cmp_full : STD_LOGIC;
    signal delay : STD_LOGIC_VECTOR (31 downto 0);
    signal delayCount : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal readBuffer1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal readBuffer2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal readBuffer3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal readBuffer4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal writeBuffer : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal buffer_r_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffer_r_ce0 : STD_LOGIC;
    signal buffer_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_r_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffer_r_ce1 : STD_LOGIC;
    signal buffer_r_we1 : STD_LOGIC;
    signal buffer_r_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal change_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_flag00000000 : BOOLEAN;
    signal value_in_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_flag00000000 : BOOLEAN;
    signal tmp_2_reg_896 : STD_LOGIC_VECTOR (0 downto 0);
    signal value_out_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state53_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal tmp_6_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_235 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state46_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state54_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_pp0_stage1_flag00011001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state47_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_state51_pp0_stage2_iter12 : BOOLEAN;
    signal ap_block_state55_pp0_stage2_iter13 : BOOLEAN;
    signal ap_block_pp0_stage2_flag00011001 : BOOLEAN;
    signal tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_246 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_8_reg_949 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_8_reg_949 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal tmp_16_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_16_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter8_tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state40_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_state48_pp0_stage3_iter11 : BOOLEAN;
    signal ap_block_state52_pp0_stage3_iter12 : BOOLEAN;
    signal ap_block_pp0_stage3_flag00011001 : BOOLEAN;
    signal tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_read_reg_871 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_879 : STD_LOGIC_VECTOR (0 downto 0);
    signal writeBuffer_load_s_fu_261_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal writeBuffer_load_s_reg_889 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_1_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_1_reg_900 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer3_load_s_fu_284_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer3_load_s_reg_916 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_295_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal delayCount_load_s_fu_312_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal delayCount_load_s_reg_930 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_7_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_8_reg_949 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_8_reg_949 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_8_reg_949 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_961 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_966 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_16_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_16_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_16_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_16_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_16_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_984 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_989 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_26_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1012 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_reg_1025 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_tmp_36_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_sel_tmp_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer1_flag_2_fu_603_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_sel_tmp3_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer2_flag_2_fu_649_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_sel_tmp11_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer3_flag_2_fu_711_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer4_flag_2_fu_748_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_208_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_reg_1077 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter2_tmp_10_reg_1077 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_reg_1082 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter2_tmp_19_reg_1082 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_reg_1092 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter2_tmp_29_reg_1092 : STD_LOGIC_VECTOR (63 downto 0);
    signal buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter2_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter3_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter4_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter5_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter6_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter7_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter8_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter9_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter10_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter11_buffer_load_4_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_1102 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter3_tmp_39_reg_1102 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_219_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_1107 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_1112 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_1117 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_37_reg_1122 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_1127 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_20_reg_1132 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter5_tmp_20_reg_1132 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_reg_1137 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter5_tmp_30_reg_1137 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter6_tmp_30_reg_1137 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter7_tmp_30_reg_1137 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter5_tmp_40_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter6_tmp_40_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter7_tmp_40_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter8_tmp_40_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter9_tmp_40_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter10_tmp_40_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal outAccumulate1_fu_817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal outAccumulate1_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter6_outAccumulate1_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter7_outAccumulate1_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter8_outAccumulate1_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_1154 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal outAccumulate_1_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal outAccumulate_1_reg_1159 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter8_outAccumulate_1_reg_1159 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_1166 : STD_LOGIC_VECTOR (63 downto 0);
    signal outAccumulate_2_fu_830_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal outAccumulate_2_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter10_outAccumulate_2_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter11_outAccumulate_2_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp19_fu_847_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp19_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter10_sel_tmp19_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter11_sel_tmp19_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_1183 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal outAccumulate_7_fu_860_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal outAccumulate_7_reg_1188 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3_flag00011011 : BOOLEAN;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_flag00011011 : BOOLEAN;
    signal ap_phi_precharge_reg_pp0_iter0_writeBuffer_flag_1_reg_167 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167 : STD_LOGIC_VECTOR (0 downto 0);
    signal writeBuffer_flag_1_phi_fu_171_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter0_writeBuffer_new_1_reg_179 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_precharge_reg_pp0_iter0_tmp_6_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal tmp_18_fu_380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_770_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer1_new_2_fu_618_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer2_new_2_fu_672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer3_new_2_fu_740_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer4_new_2_fu_755_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_flag00001001 : BOOLEAN;
    signal ap_block_pp0_stage2_flag00001001 : BOOLEAN;
    signal grp_fu_208_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_214_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_219_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_224_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal readBuffer1_load_s_fu_319_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_361_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer2_load_s_fu_326_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_391_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_414_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_8_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_s_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_2_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer4_load_s_fu_436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer1_flag_1_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer1_new_1_fu_453_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer2_flag_1_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer2_new_1_fu_469_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal readBuffer3_flag_1_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal readBuffer3_new_1_fu_489_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_3_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_readBuffer1_flag_1_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_583_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_readBuffer1_new_1_fu_523_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_fu_611_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_636_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_readBuffer2_flag_1_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_643_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_657_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_readBuffer2_new_1_fu_535_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp7_fu_665_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp10_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_691_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_698_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_readBuffer3_flag_1_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_705_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_725_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_readBuffer3_new_1_fu_547_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp16_fu_733_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_readBuffer4_flag_1_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_readBuffer4_new_1_fu_569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_delayCount_load_s_fu_577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_763_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_205_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp17_fu_836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp18_fu_841_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal outAccumulate_3_fu_854_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_ce : STD_LOGIC;
    signal grp_fu_214_ce : STD_LOGIC;
    signal grp_fu_219_ce : STD_LOGIC;
    signal grp_fu_224_ce : STD_LOGIC;
    signal grp_fu_231_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage1_flag00011011 : BOOLEAN;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_822 : BOOLEAN;

    component Echo_fadd_32ns_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Echo_fptrunc_64nscud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Echo_fpext_32ns_6dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Echo_dadd_64ns_64eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Echo_dmul_64ns_64fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Echo_sitodp_32ns_g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Echo_buffer_r IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Echo_CTRL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        delay : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buffer_r_U : component Echo_buffer_r
    generic map (
        DataWidth => 32,
        AddressRange => 48000,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buffer_r_address0,
        ce0 => buffer_r_ce0,
        q0 => buffer_r_q0,
        address1 => buffer_r_address1,
        ce1 => buffer_r_ce1,
        we1 => buffer_r_we1,
        d1 => value_in_V_0_data_out,
        q1 => buffer_r_q1);

    Echo_CTRL_BUS_s_axi_U : component Echo_CTRL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_BUS_AWVALID,
        AWREADY => s_axi_CTRL_BUS_AWREADY,
        AWADDR => s_axi_CTRL_BUS_AWADDR,
        WVALID => s_axi_CTRL_BUS_WVALID,
        WREADY => s_axi_CTRL_BUS_WREADY,
        WDATA => s_axi_CTRL_BUS_WDATA,
        WSTRB => s_axi_CTRL_BUS_WSTRB,
        ARVALID => s_axi_CTRL_BUS_ARVALID,
        ARREADY => s_axi_CTRL_BUS_ARREADY,
        ARADDR => s_axi_CTRL_BUS_ARADDR,
        RVALID => s_axi_CTRL_BUS_RVALID,
        RREADY => s_axi_CTRL_BUS_RREADY,
        RDATA => s_axi_CTRL_BUS_RDATA,
        RRESP => s_axi_CTRL_BUS_RRESP,
        BVALID => s_axi_CTRL_BUS_BVALID,
        BREADY => s_axi_CTRL_BUS_BREADY,
        BRESP => s_axi_CTRL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        delay => delay);

    Echo_fadd_32ns_32bkb_U1 : component Echo_fadd_32ns_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_reg_pp0_iter11_buffer_load_4_reg_1097,
        din1 => outAccumulate_7_reg_1188,
        ce => grp_fu_200_ce,
        dout => grp_fu_200_p2);

    Echo_fptrunc_64nscud_U2 : component Echo_fptrunc_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => reg_246,
        dout => grp_fu_205_p1);

    Echo_fpext_32ns_6dEe_U3 : component Echo_fpext_32ns_6dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_208_p0,
        dout => grp_fu_208_p1);

    Echo_fpext_32ns_6dEe_U4 : component Echo_fpext_32ns_6dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_211_p0,
        dout => grp_fu_211_p1);

    Echo_dadd_64ns_64eOg_U5 : component Echo_dadd_64ns_64eOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_214_p0,
        din1 => grp_fu_214_p1,
        ce => grp_fu_214_ce,
        dout => grp_fu_214_p2);

    Echo_dmul_64ns_64fYi_U6 : component Echo_dmul_64ns_64fYi
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_219_p0,
        din1 => grp_fu_219_p1,
        ce => grp_fu_219_ce,
        dout => grp_fu_219_p2);

    Echo_dmul_64ns_64fYi_U7 : component Echo_dmul_64ns_64fYi
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_224_p0,
        din1 => grp_fu_224_p1,
        ce => grp_fu_224_ce,
        dout => grp_fu_224_p2);

    Echo_sitodp_32ns_g8j_U8 : component Echo_sitodp_32ns_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => scale,
        ce => grp_fu_231_ce,
        dout => grp_fu_231_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    change_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                change_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = change_V_0_ack_out) and (ap_const_logic_1 = change_V_0_vld_out))) then 
                                        change_V_0_sel_rd <= not(change_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    change_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                change_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = change_V_0_vld_in) and (ap_const_logic_1 = change_V_0_ack_in))) then 
                                        change_V_0_sel_wr <= not(change_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    change_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                change_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = change_V_0_vld_in) and (ap_const_logic_1 = change_V_0_ack_out) and (change_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = change_V_0_vld_in) and (change_V_0_state = ap_const_lv2_2)))) then 
                    change_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = change_V_0_vld_in) and (ap_const_logic_0 = change_V_0_ack_out) and (change_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = change_V_0_ack_out) and (change_V_0_state = ap_const_lv2_1)))) then 
                    change_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = change_V_0_vld_in) and (change_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = change_V_0_ack_out) and (change_V_0_state = ap_const_lv2_1)) or ((change_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = change_V_0_vld_in) and (ap_const_logic_0 = change_V_0_ack_out))) and not(((ap_const_logic_0 = change_V_0_vld_in) and (ap_const_logic_1 = change_V_0_ack_out)))))) then 
                    change_V_0_state <= ap_const_lv2_3;
                else 
                    change_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    value_in_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                value_in_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = value_in_V_0_ack_out) and (ap_const_logic_1 = value_in_V_0_vld_out))) then 
                                        value_in_V_0_sel_rd <= not(value_in_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    value_in_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                value_in_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = value_in_V_0_vld_in) and (ap_const_logic_1 = value_in_V_0_ack_in))) then 
                                        value_in_V_0_sel_wr <= not(value_in_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    value_in_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                value_in_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = value_in_V_0_vld_in) and (ap_const_logic_1 = value_in_V_0_ack_out) and (ap_const_lv2_3 = value_in_V_0_state)) or ((ap_const_logic_0 = value_in_V_0_vld_in) and (ap_const_lv2_2 = value_in_V_0_state)))) then 
                    value_in_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = value_in_V_0_vld_in) and (ap_const_logic_0 = value_in_V_0_ack_out) and (ap_const_lv2_3 = value_in_V_0_state)) or ((ap_const_logic_0 = value_in_V_0_ack_out) and (ap_const_lv2_1 = value_in_V_0_state)))) then 
                    value_in_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = value_in_V_0_vld_in) and (ap_const_lv2_2 = value_in_V_0_state)) or ((ap_const_logic_1 = value_in_V_0_ack_out) and (ap_const_lv2_1 = value_in_V_0_state)) or ((ap_const_lv2_3 = value_in_V_0_state) and not(((ap_const_logic_1 = value_in_V_0_vld_in) and (ap_const_logic_0 = value_in_V_0_ack_out))) and not(((ap_const_logic_0 = value_in_V_0_vld_in) and (ap_const_logic_1 = value_in_V_0_ack_out)))))) then 
                    value_in_V_0_state <= ap_const_lv2_3;
                else 
                    value_in_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    value_out_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                value_out_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = value_out_V_1_ack_out) and (ap_const_logic_1 = value_out_V_1_vld_out))) then 
                                        value_out_V_1_sel_rd <= not(value_out_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    value_out_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                value_out_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = value_out_V_1_vld_in) and (ap_const_logic_1 = value_out_V_1_ack_in))) then 
                                        value_out_V_1_sel_wr <= not(value_out_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    value_out_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                value_out_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = value_out_V_1_vld_in) and (ap_const_logic_1 = value_out_V_1_ack_out) and (ap_const_lv2_3 = value_out_V_1_state)) or ((ap_const_logic_0 = value_out_V_1_vld_in) and (ap_const_lv2_2 = value_out_V_1_state)))) then 
                    value_out_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = value_out_V_1_vld_in) and (ap_const_logic_0 = value_out_V_1_ack_out) and (ap_const_lv2_3 = value_out_V_1_state)) or ((ap_const_logic_0 = value_out_V_1_ack_out) and (ap_const_lv2_1 = value_out_V_1_state)))) then 
                    value_out_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = value_out_V_1_vld_in) and (ap_const_lv2_2 = value_out_V_1_state)) or ((ap_const_logic_1 = value_out_V_1_ack_out) and (ap_const_lv2_1 = value_out_V_1_state)) or ((ap_const_lv2_3 = value_out_V_1_state) and not(((ap_const_logic_1 = value_out_V_1_vld_in) and (ap_const_logic_0 = value_out_V_1_ack_out))) and not(((ap_const_logic_0 = value_out_V_1_vld_in) and (ap_const_logic_1 = value_out_V_1_ack_out)))))) then 
                    value_out_V_1_state <= ap_const_lv2_3;
                else 
                    value_out_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_822 = ap_const_boolean_1)) then
                if ((ap_const_lv1_0 = tmp_2_reg_896)) then 
                    ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190 <= writeBuffer_load_s_reg_889;
                elsif ((ap_const_lv1_1 = tmp_2_reg_896)) then 
                    ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190 <= tmp_5_fu_295_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190 <= ap_phi_precharge_reg_pp0_iter0_tmp_6_reg_190;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_822 = ap_const_boolean_1)) then
                if ((ap_const_lv1_0 = tmp_2_reg_896)) then 
                    ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167 <= not_tmp_1_fu_279_p2;
                elsif ((ap_const_lv1_1 = tmp_2_reg_896)) then 
                    ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167 <= ap_phi_precharge_reg_pp0_iter0_writeBuffer_flag_1_reg_167;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_822 = ap_const_boolean_1)) then
                if ((ap_const_lv1_0 = tmp_2_reg_896)) then 
                    ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179 <= ap_const_lv32_0;
                elsif ((ap_const_lv1_1 = tmp_2_reg_896)) then 
                    ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179 <= tmp_5_fu_295_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179 <= ap_phi_precharge_reg_pp0_iter0_writeBuffer_new_1_reg_179;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter10_buffer_load_4_reg_1097 <= ap_reg_pp0_iter9_buffer_load_4_reg_1097;
                ap_reg_pp0_iter11_buffer_load_4_reg_1097 <= ap_reg_pp0_iter10_buffer_load_4_reg_1097;
                ap_reg_pp0_iter2_buffer_load_4_reg_1097 <= buffer_load_4_reg_1097;
                ap_reg_pp0_iter2_tmp_29_reg_1092 <= tmp_29_reg_1092;
                ap_reg_pp0_iter3_buffer_load_4_reg_1097 <= ap_reg_pp0_iter2_buffer_load_4_reg_1097;
                ap_reg_pp0_iter4_buffer_load_4_reg_1097 <= ap_reg_pp0_iter3_buffer_load_4_reg_1097;
                ap_reg_pp0_iter5_buffer_load_4_reg_1097 <= ap_reg_pp0_iter4_buffer_load_4_reg_1097;
                ap_reg_pp0_iter6_buffer_load_4_reg_1097 <= ap_reg_pp0_iter5_buffer_load_4_reg_1097;
                ap_reg_pp0_iter6_outAccumulate1_reg_1147 <= outAccumulate1_reg_1147;
                ap_reg_pp0_iter7_buffer_load_4_reg_1097 <= ap_reg_pp0_iter6_buffer_load_4_reg_1097;
                ap_reg_pp0_iter7_outAccumulate1_reg_1147 <= ap_reg_pp0_iter6_outAccumulate1_reg_1147;
                ap_reg_pp0_iter8_buffer_load_4_reg_1097 <= ap_reg_pp0_iter7_buffer_load_4_reg_1097;
                ap_reg_pp0_iter8_outAccumulate1_reg_1147 <= ap_reg_pp0_iter7_outAccumulate1_reg_1147;
                ap_reg_pp0_iter9_buffer_load_4_reg_1097 <= ap_reg_pp0_iter8_buffer_load_4_reg_1097;
                not_tmp_1_reg_900 <= not_tmp_1_fu_279_p2;
                outAccumulate1_reg_1147 <= outAccumulate1_fu_817_p3;
                readBuffer3_load_s_reg_916 <= readBuffer3_load_s_fu_284_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter10_outAccumulate_2_reg_1171 <= outAccumulate_2_reg_1171;
                ap_reg_pp0_iter10_sel_tmp_reg_1046 <= ap_reg_pp0_iter9_sel_tmp_reg_1046;
                ap_reg_pp0_iter10_tmp_36_reg_1036 <= ap_reg_pp0_iter9_tmp_36_reg_1036;
                ap_reg_pp0_iter11_outAccumulate_2_reg_1171 <= ap_reg_pp0_iter10_outAccumulate_2_reg_1171;
                ap_reg_pp0_iter11_sel_tmp_reg_1046 <= ap_reg_pp0_iter10_sel_tmp_reg_1046;
                ap_reg_pp0_iter11_tmp_36_reg_1036 <= ap_reg_pp0_iter10_tmp_36_reg_1036;
                ap_reg_pp0_iter2_sel_tmp11_reg_1064 <= sel_tmp11_reg_1064;
                ap_reg_pp0_iter2_sel_tmp3_reg_1055 <= sel_tmp3_reg_1055;
                ap_reg_pp0_iter2_sel_tmp_reg_1046 <= sel_tmp_reg_1046;
                ap_reg_pp0_iter2_tmp_36_reg_1036 <= tmp_36_reg_1036;
                ap_reg_pp0_iter3_sel_tmp11_reg_1064 <= ap_reg_pp0_iter2_sel_tmp11_reg_1064;
                ap_reg_pp0_iter3_sel_tmp3_reg_1055 <= ap_reg_pp0_iter2_sel_tmp3_reg_1055;
                ap_reg_pp0_iter3_sel_tmp_reg_1046 <= ap_reg_pp0_iter2_sel_tmp_reg_1046;
                ap_reg_pp0_iter3_tmp_36_reg_1036 <= ap_reg_pp0_iter2_tmp_36_reg_1036;
                ap_reg_pp0_iter4_sel_tmp11_reg_1064 <= ap_reg_pp0_iter3_sel_tmp11_reg_1064;
                ap_reg_pp0_iter4_sel_tmp3_reg_1055 <= ap_reg_pp0_iter3_sel_tmp3_reg_1055;
                ap_reg_pp0_iter4_sel_tmp_reg_1046 <= ap_reg_pp0_iter3_sel_tmp_reg_1046;
                ap_reg_pp0_iter4_tmp_36_reg_1036 <= ap_reg_pp0_iter3_tmp_36_reg_1036;
                ap_reg_pp0_iter5_sel_tmp11_reg_1064 <= ap_reg_pp0_iter4_sel_tmp11_reg_1064;
                ap_reg_pp0_iter5_sel_tmp3_reg_1055 <= ap_reg_pp0_iter4_sel_tmp3_reg_1055;
                ap_reg_pp0_iter5_sel_tmp_reg_1046 <= ap_reg_pp0_iter4_sel_tmp_reg_1046;
                ap_reg_pp0_iter5_tmp_20_reg_1132 <= tmp_20_reg_1132;
                ap_reg_pp0_iter5_tmp_36_reg_1036 <= ap_reg_pp0_iter4_tmp_36_reg_1036;
                ap_reg_pp0_iter6_sel_tmp11_reg_1064 <= ap_reg_pp0_iter5_sel_tmp11_reg_1064;
                ap_reg_pp0_iter6_sel_tmp3_reg_1055 <= ap_reg_pp0_iter5_sel_tmp3_reg_1055;
                ap_reg_pp0_iter6_sel_tmp_reg_1046 <= ap_reg_pp0_iter5_sel_tmp_reg_1046;
                ap_reg_pp0_iter6_tmp_36_reg_1036 <= ap_reg_pp0_iter5_tmp_36_reg_1036;
                ap_reg_pp0_iter7_sel_tmp11_reg_1064 <= ap_reg_pp0_iter6_sel_tmp11_reg_1064;
                ap_reg_pp0_iter7_sel_tmp3_reg_1055 <= ap_reg_pp0_iter6_sel_tmp3_reg_1055;
                ap_reg_pp0_iter7_sel_tmp_reg_1046 <= ap_reg_pp0_iter6_sel_tmp_reg_1046;
                ap_reg_pp0_iter7_tmp_36_reg_1036 <= ap_reg_pp0_iter6_tmp_36_reg_1036;
                ap_reg_pp0_iter8_sel_tmp11_reg_1064 <= ap_reg_pp0_iter7_sel_tmp11_reg_1064;
                ap_reg_pp0_iter8_sel_tmp3_reg_1055 <= ap_reg_pp0_iter7_sel_tmp3_reg_1055;
                ap_reg_pp0_iter8_sel_tmp_reg_1046 <= ap_reg_pp0_iter7_sel_tmp_reg_1046;
                ap_reg_pp0_iter8_tmp_36_reg_1036 <= ap_reg_pp0_iter7_tmp_36_reg_1036;
                ap_reg_pp0_iter9_sel_tmp11_reg_1064 <= ap_reg_pp0_iter8_sel_tmp11_reg_1064;
                ap_reg_pp0_iter9_sel_tmp3_reg_1055 <= ap_reg_pp0_iter8_sel_tmp3_reg_1055;
                ap_reg_pp0_iter9_sel_tmp_reg_1046 <= ap_reg_pp0_iter8_sel_tmp_reg_1046;
                ap_reg_pp0_iter9_tmp_36_reg_1036 <= ap_reg_pp0_iter8_tmp_36_reg_1036;
                outAccumulate_2_reg_1171 <= outAccumulate_2_fu_830_p3;
                sel_tmp11_reg_1064 <= sel_tmp11_fu_685_p2;
                sel_tmp3_reg_1055 <= sel_tmp3_fu_631_p2;
                sel_tmp_reg_1046 <= sel_tmp_fu_597_p2;
                tmp_1_reg_879 <= tmp_1_fu_251_p2;
                tmp_2_reg_896 <= tmp_2_fu_269_p2;
                tmp_36_reg_1036 <= tmp_36_fu_495_p2;
                tmp_9_reg_1025 <= grp_fu_231_p1;
                writeBuffer_load_s_reg_889 <= writeBuffer_load_s_fu_261_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter10_sel_tmp19_reg_1178 <= sel_tmp19_reg_1178;
                ap_reg_pp0_iter10_tmp_40_reg_1142 <= ap_reg_pp0_iter9_tmp_40_reg_1142;
                ap_reg_pp0_iter11_sel_tmp19_reg_1178 <= ap_reg_pp0_iter10_sel_tmp19_reg_1178;
                ap_reg_pp0_iter2_tmp_10_reg_1077 <= tmp_10_reg_1077;
                ap_reg_pp0_iter2_tmp_19_reg_1082 <= tmp_19_reg_1082;
                ap_reg_pp0_iter5_tmp_30_reg_1137 <= tmp_30_reg_1137;
                ap_reg_pp0_iter5_tmp_40_reg_1142 <= tmp_40_reg_1142;
                ap_reg_pp0_iter6_tmp_30_reg_1137 <= ap_reg_pp0_iter5_tmp_30_reg_1137;
                ap_reg_pp0_iter6_tmp_40_reg_1142 <= ap_reg_pp0_iter5_tmp_40_reg_1142;
                ap_reg_pp0_iter7_tmp_30_reg_1137 <= ap_reg_pp0_iter6_tmp_30_reg_1137;
                ap_reg_pp0_iter7_tmp_40_reg_1142 <= ap_reg_pp0_iter6_tmp_40_reg_1142;
                ap_reg_pp0_iter8_outAccumulate_1_reg_1159 <= outAccumulate_1_reg_1159;
                ap_reg_pp0_iter8_tmp_40_reg_1142 <= ap_reg_pp0_iter7_tmp_40_reg_1142;
                ap_reg_pp0_iter9_tmp_40_reg_1142 <= ap_reg_pp0_iter8_tmp_40_reg_1142;
                outAccumulate_1_reg_1159 <= outAccumulate_1_fu_824_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter2_tmp_16_reg_972 <= tmp_16_reg_972;
                ap_reg_pp0_iter2_tmp_26_reg_995 <= tmp_26_reg_995;
                ap_reg_pp0_iter2_tmp_7_reg_936 <= tmp_7_reg_936;
                ap_reg_pp0_iter2_tmp_8_reg_949 <= tmp_8_reg_949;
                ap_reg_pp0_iter3_tmp_16_reg_972 <= ap_reg_pp0_iter2_tmp_16_reg_972;
                ap_reg_pp0_iter3_tmp_26_reg_995 <= ap_reg_pp0_iter2_tmp_26_reg_995;
                ap_reg_pp0_iter3_tmp_39_reg_1102 <= tmp_39_reg_1102;
                ap_reg_pp0_iter3_tmp_7_reg_936 <= ap_reg_pp0_iter2_tmp_7_reg_936;
                ap_reg_pp0_iter3_tmp_8_reg_949 <= ap_reg_pp0_iter2_tmp_8_reg_949;
                ap_reg_pp0_iter4_tmp_16_reg_972 <= ap_reg_pp0_iter3_tmp_16_reg_972;
                ap_reg_pp0_iter4_tmp_26_reg_995 <= ap_reg_pp0_iter3_tmp_26_reg_995;
                ap_reg_pp0_iter4_tmp_7_reg_936 <= ap_reg_pp0_iter3_tmp_7_reg_936;
                ap_reg_pp0_iter4_tmp_8_reg_949 <= ap_reg_pp0_iter3_tmp_8_reg_949;
                ap_reg_pp0_iter5_tmp_16_reg_972 <= ap_reg_pp0_iter4_tmp_16_reg_972;
                ap_reg_pp0_iter5_tmp_26_reg_995 <= ap_reg_pp0_iter4_tmp_26_reg_995;
                ap_reg_pp0_iter5_tmp_7_reg_936 <= ap_reg_pp0_iter4_tmp_7_reg_936;
                ap_reg_pp0_iter5_tmp_8_reg_949 <= ap_reg_pp0_iter4_tmp_8_reg_949;
                ap_reg_pp0_iter6_tmp_16_reg_972 <= ap_reg_pp0_iter5_tmp_16_reg_972;
                ap_reg_pp0_iter6_tmp_26_reg_995 <= ap_reg_pp0_iter5_tmp_26_reg_995;
                ap_reg_pp0_iter6_tmp_7_reg_936 <= ap_reg_pp0_iter5_tmp_7_reg_936;
                ap_reg_pp0_iter7_tmp_16_reg_972 <= ap_reg_pp0_iter6_tmp_16_reg_972;
                ap_reg_pp0_iter7_tmp_26_reg_995 <= ap_reg_pp0_iter6_tmp_26_reg_995;
                ap_reg_pp0_iter7_tmp_7_reg_936 <= ap_reg_pp0_iter6_tmp_7_reg_936;
                ap_reg_pp0_iter8_tmp_26_reg_995 <= ap_reg_pp0_iter7_tmp_26_reg_995;
                ap_reg_pp0_iter8_tmp_7_reg_936 <= ap_reg_pp0_iter7_tmp_7_reg_936;
                ap_reg_pp0_iter9_tmp_26_reg_995 <= ap_reg_pp0_iter8_tmp_26_reg_995;
                ap_reg_pp0_iter9_tmp_7_reg_936 <= ap_reg_pp0_iter8_tmp_7_reg_936;
                delayCount_load_s_reg_930 <= delayCount_load_s_fu_312_p3;
                delay_read_reg_871 <= delay;
                outAccumulate_7_reg_1188 <= outAccumulate_7_fu_860_p3;
                tmp_13_reg_961 <= tmp_13_fu_355_p2;
                tmp_15_reg_966 <= tmp_15_fu_369_p2;
                tmp_16_reg_972 <= tmp_16_fu_374_p2;
                tmp_23_reg_984 <= tmp_23_fu_385_p2;
                tmp_25_reg_989 <= tmp_25_fu_399_p2;
                tmp_26_reg_995 <= tmp_26_fu_404_p2;
                tmp_33_reg_1002 <= tmp_33_fu_409_p2;
                tmp_35_reg_1007 <= tmp_35_fu_421_p2;
                tmp_44_reg_1012 <= tmp_44_fu_426_p2;
                tmp_7_reg_936 <= tmp_7_fu_333_p2;
                tmp_8_reg_949 <= tmp_8_fu_344_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0))) then
                buffer_load_4_reg_1097 <= buffer_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = change_V_0_load_A)) then
                change_V_0_payload_A <= change_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = change_V_0_load_B)) then
                change_V_0_payload_B <= change_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0))) then
                delayCount <= tmp_48_fu_770_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = readBuffer1_flag_2_fu_603_p3))) then
                readBuffer1 <= readBuffer1_new_2_fu_618_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = readBuffer2_flag_2_fu_649_p3))) then
                readBuffer2 <= readBuffer2_new_2_fu_672_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = readBuffer3_flag_2_fu_711_p3))) then
                readBuffer3 <= readBuffer3_new_2_fu_740_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = readBuffer4_flag_2_fu_748_p3))) then
                readBuffer4 <= readBuffer4_new_2_fu_755_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_26_reg_995)))) then
                reg_235 <= buffer_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)))) then
                reg_240 <= buffer_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_reg_pp0_iter5_tmp_8_reg_949)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_reg_pp0_iter7_tmp_16_reg_972)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_tmp_26_reg_995)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter11) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter11_tmp_36_reg_1036) and (ap_const_lv1_1 = ap_reg_pp0_iter11_sel_tmp_reg_1046)))) then
                reg_246 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter9_sel_tmp_reg_1046))) then
                sel_tmp19_reg_1178 <= sel_tmp19_fu_847_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_8_reg_949))) then
                tmp_10_reg_1077 <= grp_fu_208_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_reg_pp0_iter4_tmp_8_reg_949))) then
                tmp_11_reg_1127 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter2_tmp_16_reg_972))) then
                tmp_17_reg_1112 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_16_reg_972))) then
                tmp_19_reg_1082 <= grp_fu_211_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_reg_pp0_iter4_tmp_16_reg_972))) then
                tmp_20_reg_1132 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_reg_pp0_iter5_tmp_16_reg_972))) then
                tmp_21_reg_1154 <= grp_fu_211_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_reg_pp0_iter2_tmp_26_reg_995))) then
                tmp_27_reg_1117 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = tmp_26_reg_995) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0))) then
                tmp_29_reg_1092 <= grp_fu_208_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_reg_pp0_iter4_tmp_26_reg_995))) then
                tmp_30_reg_1137 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter7_tmp_26_reg_995))) then
                tmp_31_reg_1166 <= grp_fu_211_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_reg_pp0_iter2_tmp_36_reg_1036) and (ap_const_lv1_1 = ap_reg_pp0_iter2_sel_tmp_reg_1046))) then
                tmp_37_reg_1122 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = tmp_36_reg_1036) and (ap_const_lv1_1 = sel_tmp_reg_1046))) then
                tmp_39_reg_1102 <= grp_fu_208_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_reg_pp0_iter4_tmp_36_reg_1036) and (ap_const_lv1_1 = ap_reg_pp0_iter4_sel_tmp_reg_1046))) then
                tmp_40_reg_1142 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = ap_reg_pp0_iter9_tmp_36_reg_1036) and (ap_const_lv1_1 = ap_reg_pp0_iter9_sel_tmp_reg_1046))) then
                tmp_41_reg_1183 <= grp_fu_208_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                tmp_6_reg_190 <= ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter2_tmp_8_reg_949))) then
                tmp_s_reg_1107 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = value_in_V_0_load_A)) then
                value_in_V_0_payload_A <= value_in_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = value_in_V_0_load_B)) then
                value_in_V_0_payload_B <= value_in_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = value_out_V_1_load_A)) then
                value_out_V_1_payload_A <= grp_fu_200_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = value_out_V_1_load_B)) then
                value_out_V_1_payload_B <= grp_fu_200_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = writeBuffer_flag_1_phi_fu_171_p4))) then
                writeBuffer <= ap_phi_precharge_reg_pp0_iter1_writeBuffer_new_1_reg_179;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_flag00011011, ap_block_pp0_stage2_flag00011011, ap_block_pp0_stage0_flag00011011, ap_block_pp0_stage1_flag00011011, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_block_pp0_stage1_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_block_pp0_stage2_flag00011011 = ap_const_boolean_0) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_block_pp0_stage2_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_reset_idle_pp0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_flag00001001_assign_proc : process(change_V_0_vld_out)
    begin
                ap_block_pp0_stage1_flag00001001 <= ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = change_V_0_vld_out));
    end process;


    ap_block_pp0_stage1_flag00011001_assign_proc : process(change_V_0_vld_out, value_out_V_1_ack_in, ap_enable_reg_pp0_iter13)
    begin
                ap_block_pp0_stage1_flag00011001 <= (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = change_V_0_vld_out)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = value_out_V_1_ack_in)));
    end process;


    ap_block_pp0_stage1_flag00011011_assign_proc : process(change_V_0_vld_out, value_out_V_1_ack_in, ap_enable_reg_pp0_iter13)
    begin
                ap_block_pp0_stage1_flag00011011 <= (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = change_V_0_vld_out)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = value_out_V_1_ack_in)));
    end process;

        ap_block_pp0_stage2_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_flag00001001_assign_proc : process(value_out_V_1_ack_in, ap_enable_reg_pp0_iter13)
    begin
                ap_block_pp0_stage2_flag00001001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = value_out_V_1_ack_in));
    end process;


    ap_block_pp0_stage2_flag00011001_assign_proc : process(value_out_V_1_ack_in, ap_enable_reg_pp0_iter13)
    begin
                ap_block_pp0_stage2_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = value_out_V_1_ack_in));
    end process;


    ap_block_pp0_stage2_flag00011011_assign_proc : process(value_out_V_1_ack_in, ap_enable_reg_pp0_iter13)
    begin
                ap_block_pp0_stage2_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = value_out_V_1_ack_in));
    end process;

        ap_block_pp0_stage3_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_flag00011001_assign_proc : process(value_in_V_0_vld_out, tmp_2_reg_896)
    begin
                ap_block_pp0_stage3_flag00011001 <= ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_1 = tmp_2_reg_896) and (ap_const_logic_0 = value_in_V_0_vld_out));
    end process;


    ap_block_pp0_stage3_flag00011011_assign_proc : process(value_in_V_0_vld_out, tmp_2_reg_896)
    begin
                ap_block_pp0_stage3_flag00011011 <= ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_1 = tmp_2_reg_896) and (ap_const_logic_0 = value_in_V_0_vld_out));
    end process;

        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(change_V_0_vld_out)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (ap_const_logic_0 = change_V_0_vld_out);
    end process;

        ap_block_state30_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage3_iter0_assign_proc : process(value_in_V_0_vld_out, tmp_2_reg_896)
    begin
                ap_block_state4_pp0_stage3_iter0 <= ((ap_const_lv1_1 = tmp_2_reg_896) and (ap_const_logic_0 = value_in_V_0_vld_out));
    end process;

        ap_block_state50_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage3_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state55_pp0_stage2_iter13_assign_proc : process(value_out_V_1_ack_in)
    begin
                ap_block_state55_pp0_stage2_iter13 <= (ap_const_logic_0 = value_out_V_1_ack_in);
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_822_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00011001)
    begin
                ap_condition_822 <= ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_0 = ap_const_logic_1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6) and (ap_const_logic_0 = ap_enable_reg_pp0_iter7) and (ap_const_logic_0 = ap_enable_reg_pp0_iter8) and (ap_const_logic_0 = ap_enable_reg_pp0_iter9) and (ap_const_logic_0 = ap_enable_reg_pp0_iter10) and (ap_const_logic_0 = ap_enable_reg_pp0_iter11) and (ap_const_logic_0 = ap_enable_reg_pp0_iter12) and (ap_const_logic_0 = ap_enable_reg_pp0_iter13))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_precharge_reg_pp0_iter0_tmp_6_reg_190 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_precharge_reg_pp0_iter0_writeBuffer_flag_1_reg_167 <= "X";
    ap_phi_precharge_reg_pp0_iter0_writeBuffer_new_1_reg_179 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    buffer_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_4_fu_350_p1, ap_block_pp0_stage0_flag00000000, tmp_28_fu_475_p1, tmp_50_fu_812_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0))) then 
                buffer_r_address0 <= tmp_50_fu_812_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0))) then 
                buffer_r_address0 <= tmp_28_fu_475_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
                buffer_r_address0 <= tmp_4_fu_350_p1(16 - 1 downto 0);
            else 
                buffer_r_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            buffer_r_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buffer_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_3_fu_291_p1, ap_block_pp0_stage0_flag00000000, tmp_18_fu_380_p1, tmp_38_fu_501_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            buffer_r_address1 <= tmp_38_fu_501_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            buffer_r_address1 <= tmp_18_fu_380_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0))) then 
            buffer_r_address1 <= tmp_3_fu_291_p1(16 - 1 downto 0);
        else 
            buffer_r_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buffer_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage2_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            buffer_r_ce0 <= ap_const_logic_1;
        else 
            buffer_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage3_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            buffer_r_ce1 <= ap_const_logic_1;
        else 
            buffer_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_r_we1_assign_proc : process(ap_CS_fsm_pp0_stage3, tmp_2_reg_896, ap_block_pp0_stage3_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_1 = tmp_2_reg_896) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0))) then 
            buffer_r_we1 <= ap_const_logic_1;
        else 
            buffer_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    change_V_0_ack_in <= change_V_0_state(1);

    change_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_const_logic_1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0))) then 
            change_V_0_ack_out <= ap_const_logic_1;
        else 
            change_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    change_V_0_data_out_assign_proc : process(change_V_0_payload_A, change_V_0_payload_B, change_V_0_sel)
    begin
        if ((ap_const_logic_1 = change_V_0_sel)) then 
            change_V_0_data_out <= change_V_0_payload_B;
        else 
            change_V_0_data_out <= change_V_0_payload_A;
        end if; 
    end process;

    change_V_0_load_A <= (change_V_0_state_cmp_full and not(change_V_0_sel_wr));
    change_V_0_load_B <= (change_V_0_sel_wr and change_V_0_state_cmp_full);
    change_V_0_sel <= change_V_0_sel_rd;
    change_V_0_state_cmp_full <= '0' when (change_V_0_state = ap_const_lv2_1) else '1';
    change_V_0_vld_in <= change_V_TVALID;
    change_V_0_vld_out <= change_V_0_state(0);

    change_V_TDATA_blk_n_assign_proc : process(change_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_const_logic_1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0))) then 
            change_V_TDATA_blk_n <= change_V_0_state(0);
        else 
            change_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    change_V_TREADY <= change_V_0_state(1);
    delayCount_load_s_fu_312_p3 <= 
        delayCount when (tmp_1_reg_879(0) = '1') else 
        ap_const_lv32_0;

    grp_fu_200_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage2_flag00011001, ap_block_pp0_stage3_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)))) then 
            grp_fu_200_ce <= ap_const_logic_1;
        else 
            grp_fu_200_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_208_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, reg_235, ap_enable_reg_pp0_iter1, reg_240, ap_enable_reg_pp0_iter2, outAccumulate_2_reg_1171, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            grp_fu_208_p0 <= outAccumulate_2_reg_1171;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            grp_fu_208_p0 <= reg_240;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_208_p0 <= reg_235;
        else 
            grp_fu_208_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_211_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_240, ap_enable_reg_pp0_iter7, outAccumulate1_reg_1147, ap_enable_reg_pp0_iter6, outAccumulate_1_reg_1159, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then 
            grp_fu_211_p0 <= outAccumulate_1_reg_1159;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            grp_fu_211_p0 <= outAccumulate1_reg_1147;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_211_p0 <= reg_240;
        else 
            grp_fu_211_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_214_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage2_flag00011001, ap_block_pp0_stage3_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)))) then 
            grp_fu_214_ce <= ap_const_logic_1;
        else 
            grp_fu_214_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_214_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, tmp_11_reg_1127, ap_enable_reg_pp0_iter4, tmp_21_reg_1154, ap_enable_reg_pp0_iter6, tmp_31_reg_1166, tmp_41_reg_1183, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            grp_fu_214_p0 <= tmp_41_reg_1183;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_214_p0 <= tmp_31_reg_1166;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_214_p0 <= tmp_21_reg_1154;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_214_p0 <= tmp_11_reg_1127;
        else 
            grp_fu_214_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_214_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_reg_pp0_iter5_tmp_20_reg_1132, ap_reg_pp0_iter7_tmp_30_reg_1137, ap_reg_pp0_iter10_tmp_40_reg_1142, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            grp_fu_214_p1 <= ap_reg_pp0_iter10_tmp_40_reg_1142;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_214_p1 <= ap_reg_pp0_iter7_tmp_30_reg_1137;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_214_p1 <= ap_reg_pp0_iter5_tmp_20_reg_1132;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_214_p1 <= ap_const_lv64_0;
        else 
            grp_fu_214_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_219_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage2_flag00011001, ap_block_pp0_stage3_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)))) then 
            grp_fu_219_ce <= ap_const_logic_1;
        else 
            grp_fu_219_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_219_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_9_reg_1025, tmp_s_reg_1107, tmp_27_reg_1117, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_219_p0 <= tmp_27_reg_1117;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            grp_fu_219_p0 <= tmp_s_reg_1107;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_219_p0 <= tmp_9_reg_1025;
        else 
            grp_fu_219_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_219_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter2_tmp_10_reg_1077, ap_reg_pp0_iter2_tmp_29_reg_1092, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_219_p1 <= ap_reg_pp0_iter2_tmp_29_reg_1092;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            grp_fu_219_p1 <= ap_reg_pp0_iter2_tmp_10_reg_1077;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_219_p1 <= ap_const_lv64_3FC0000000000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_219_p1 <= ap_const_lv64_3FE0000000000000;
        else 
            grp_fu_219_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_224_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage2_flag00011001, ap_block_pp0_stage3_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)))) then 
            grp_fu_224_ce <= ap_const_logic_1;
        else 
            grp_fu_224_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_224_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_9_reg_1025, tmp_17_reg_1112, ap_enable_reg_pp0_iter3, tmp_37_reg_1122, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_224_p0 <= tmp_37_reg_1122;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            grp_fu_224_p0 <= tmp_17_reg_1112;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_224_p0 <= tmp_9_reg_1025;
        else 
            grp_fu_224_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_224_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter2_tmp_19_reg_1082, ap_reg_pp0_iter3_tmp_39_reg_1102, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_224_p1 <= ap_reg_pp0_iter3_tmp_39_reg_1102;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            grp_fu_224_p1 <= ap_reg_pp0_iter2_tmp_19_reg_1082;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_224_p1 <= ap_const_lv64_3FB0000000000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_224_p1 <= ap_const_lv64_3FD0000000000000;
        else 
            grp_fu_224_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_231_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage2_flag00011001, ap_block_pp0_stage3_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)))) then 
            grp_fu_231_ce <= ap_const_logic_1;
        else 
            grp_fu_231_ce <= ap_const_logic_0;
        end if; 
    end process;

    not_tmp_1_fu_279_p2 <= (tmp_1_reg_879 xor ap_const_lv1_1);
    not_tmp_2_fu_479_p2 <= (tmp_26_reg_995 xor ap_const_lv1_1);
    not_tmp_3_fu_512_p2 <= (tmp_36_fu_495_p2 xor ap_const_lv1_1);
    not_tmp_8_fu_443_p2 <= (tmp_8_reg_949 xor ap_const_lv1_1);
    not_tmp_s_fu_459_p2 <= (tmp_16_reg_972 xor ap_const_lv1_1);
    outAccumulate1_fu_817_p3 <= 
        ap_const_lv32_0 when (ap_reg_pp0_iter5_tmp_8_reg_949(0) = '1') else 
        grp_fu_205_p1;
    outAccumulate_1_fu_824_p3 <= 
        ap_reg_pp0_iter6_outAccumulate1_reg_1147 when (ap_reg_pp0_iter7_tmp_16_reg_972(0) = '1') else 
        grp_fu_205_p1;
    outAccumulate_2_fu_830_p3 <= 
        ap_reg_pp0_iter8_outAccumulate_1_reg_1159 when (ap_reg_pp0_iter9_tmp_26_reg_995(0) = '1') else 
        grp_fu_205_p1;
    outAccumulate_3_fu_854_p3 <= 
        ap_reg_pp0_iter11_outAccumulate_2_reg_1171 when (ap_reg_pp0_iter11_tmp_36_reg_1036(0) = '1') else 
        grp_fu_205_p1;
    outAccumulate_7_fu_860_p3 <= 
        outAccumulate_3_fu_854_p3 when (ap_reg_pp0_iter11_sel_tmp_reg_1046(0) = '1') else 
        ap_reg_pp0_iter11_sel_tmp19_reg_1178;
    p_delayCount_load_s_fu_577_p3 <= 
        ap_const_lv32_0 when (tmp_44_reg_1012(0) = '1') else 
        delayCount_load_s_reg_930;
    p_readBuffer1_flag_1_fu_518_p2 <= (tmp_44_reg_1012 or readBuffer1_flag_1_fu_448_p2);
    p_readBuffer1_new_1_fu_523_p3 <= 
        ap_const_lv32_0 when (tmp_44_reg_1012(0) = '1') else 
        readBuffer1_new_1_fu_453_p3;
    p_readBuffer2_flag_1_fu_530_p2 <= (tmp_44_reg_1012 or readBuffer2_flag_1_fu_464_p2);
    p_readBuffer2_new_1_fu_535_p3 <= 
        ap_const_lv32_0 when (tmp_44_reg_1012(0) = '1') else 
        readBuffer2_new_1_fu_469_p3;
    p_readBuffer3_flag_1_fu_542_p2 <= (tmp_44_reg_1012 or readBuffer3_flag_1_fu_484_p2);
    p_readBuffer3_new_1_fu_547_p3 <= 
        ap_const_lv32_0 when (tmp_44_reg_1012(0) = '1') else 
        readBuffer3_new_1_fu_489_p3;
    p_readBuffer4_flag_1_fu_558_p2 <= (tmp5_fu_554_p2 or not_tmp_3_fu_512_p2);
    p_readBuffer4_new_1_fu_569_p3 <= 
        ap_const_lv32_0 when (tmp_45_fu_564_p2(0) = '1') else 
        tmp_43_fu_506_p2;
    readBuffer1_flag_1_fu_448_p2 <= (not_tmp_8_fu_443_p2 or not_tmp_1_reg_900);
    readBuffer1_flag_2_fu_603_p3 <= 
        p_readBuffer1_flag_1_fu_518_p2 when (sel_tmp_fu_597_p2(0) = '1') else 
        sel_tmp8_fu_583_p3;
    readBuffer1_load_s_fu_319_p3 <= 
        readBuffer1 when (tmp_1_reg_879(0) = '1') else 
        ap_const_lv32_0;
    readBuffer1_new_1_fu_453_p3 <= 
        ap_const_lv32_0 when (tmp_8_reg_949(0) = '1') else 
        tmp_13_reg_961;
    readBuffer1_new_2_fu_618_p3 <= 
        p_readBuffer1_new_1_fu_523_p3 when (sel_tmp_fu_597_p2(0) = '1') else 
        sel_tmp1_fu_611_p3;
    readBuffer2_flag_1_fu_464_p2 <= (not_tmp_s_fu_459_p2 or not_tmp_1_reg_900);
    readBuffer2_flag_2_fu_649_p3 <= 
        p_readBuffer2_flag_1_fu_530_p2 when (sel_tmp_fu_597_p2(0) = '1') else 
        sel_tmp5_fu_643_p3;
    readBuffer2_load_s_fu_326_p3 <= 
        readBuffer2 when (tmp_1_reg_879(0) = '1') else 
        ap_const_lv32_0;
    readBuffer2_new_1_fu_469_p3 <= 
        ap_const_lv32_0 when (tmp_16_reg_972(0) = '1') else 
        tmp_23_reg_984;
    readBuffer2_new_2_fu_672_p3 <= 
        p_readBuffer2_new_1_fu_535_p3 when (sel_tmp_fu_597_p2(0) = '1') else 
        sel_tmp7_fu_665_p3;
    readBuffer3_flag_1_fu_484_p2 <= (not_tmp_2_fu_479_p2 or not_tmp_1_reg_900);
    readBuffer3_flag_2_fu_711_p3 <= 
        p_readBuffer3_flag_1_fu_542_p2 when (sel_tmp_fu_597_p2(0) = '1') else 
        sel_tmp14_fu_705_p3;
    readBuffer3_load_s_fu_284_p3 <= 
        readBuffer3 when (tmp_1_reg_879(0) = '1') else 
        ap_const_lv32_0;
    readBuffer3_new_1_fu_489_p3 <= 
        ap_const_lv32_0 when (tmp_26_reg_995(0) = '1') else 
        tmp_33_reg_1002;
    readBuffer3_new_2_fu_740_p3 <= 
        p_readBuffer3_new_1_fu_547_p3 when (sel_tmp_fu_597_p2(0) = '1') else 
        sel_tmp16_fu_733_p3;
    readBuffer4_flag_2_fu_748_p3 <= 
        p_readBuffer4_flag_1_fu_558_p2 when (sel_tmp_fu_597_p2(0) = '1') else 
        not_tmp_1_reg_900;
    readBuffer4_load_s_fu_436_p3 <= 
        readBuffer4 when (tmp_1_reg_879(0) = '1') else 
        ap_const_lv32_0;
    readBuffer4_new_2_fu_755_p3 <= 
        p_readBuffer4_new_1_fu_569_p3 when (sel_tmp_fu_597_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp10_fu_680_p2 <= (tmp_25_reg_989 xor ap_const_lv1_1);
    sel_tmp11_fu_685_p2 <= (sel_tmp9_fu_589_p2 and sel_tmp10_fu_680_p2);
    sel_tmp12_fu_691_p3 <= 
        not_tmp_1_reg_900 when (sel_tmp11_fu_685_p2(0) = '1') else 
        readBuffer3_flag_1_fu_484_p2;
    sel_tmp13_fu_698_p3 <= 
        not_tmp_1_reg_900 when (sel_tmp3_fu_631_p2(0) = '1') else 
        sel_tmp12_fu_691_p3;
    sel_tmp14_fu_705_p3 <= 
        sel_tmp13_fu_698_p3 when (tmp_7_reg_936(0) = '1') else 
        not_tmp_1_reg_900;
    sel_tmp15_fu_725_p3 <= 
        ap_const_lv32_0 when (tmp_46_fu_719_p2(0) = '1') else 
        readBuffer3_new_1_fu_489_p3;
    sel_tmp16_fu_733_p3 <= 
        sel_tmp15_fu_725_p3 when (tmp_7_reg_936(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp17_fu_836_p3 <= 
        ap_reg_pp0_iter8_outAccumulate_1_reg_1159 when (ap_reg_pp0_iter9_sel_tmp11_reg_1064(0) = '1') else 
        outAccumulate_2_reg_1171;
    sel_tmp18_fu_841_p3 <= 
        ap_reg_pp0_iter8_outAccumulate1_reg_1147 when (ap_reg_pp0_iter9_sel_tmp3_reg_1055(0) = '1') else 
        sel_tmp17_fu_836_p3;
    sel_tmp19_fu_847_p3 <= 
        sel_tmp18_fu_841_p3 when (ap_reg_pp0_iter9_tmp_7_reg_936(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp1_fu_611_p3 <= 
        readBuffer1_new_1_fu_453_p3 when (tmp_7_reg_936(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp2_fu_626_p2 <= (tmp_15_reg_966 xor ap_const_lv1_1);
    sel_tmp3_fu_631_p2 <= (tmp_7_reg_936 and sel_tmp2_fu_626_p2);
    sel_tmp4_fu_636_p3 <= 
        not_tmp_1_reg_900 when (sel_tmp3_fu_631_p2(0) = '1') else 
        readBuffer2_flag_1_fu_464_p2;
    sel_tmp5_fu_643_p3 <= 
        sel_tmp4_fu_636_p3 when (tmp_7_reg_936(0) = '1') else 
        not_tmp_1_reg_900;
    sel_tmp6_fu_657_p3 <= 
        ap_const_lv32_0 when (sel_tmp3_fu_631_p2(0) = '1') else 
        readBuffer2_new_1_fu_469_p3;
    sel_tmp7_fu_665_p3 <= 
        sel_tmp6_fu_657_p3 when (tmp_7_reg_936(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp8_fu_583_p3 <= 
        readBuffer1_flag_1_fu_448_p2 when (tmp_7_reg_936(0) = '1') else 
        not_tmp_1_reg_900;
    sel_tmp9_fu_589_p2 <= (tmp_7_reg_936 and tmp_15_reg_966);
    sel_tmp_fu_597_p2 <= (tmp6_fu_593_p2 and sel_tmp9_fu_589_p2);
    tmp5_fu_554_p2 <= (tmp_44_reg_1012 or not_tmp_1_reg_900);
    tmp6_fu_593_p2 <= (tmp_25_reg_989 and tmp_35_reg_1007);
    tmp_13_fu_355_p2 <= std_logic_vector(unsigned(readBuffer1_load_s_fu_319_p3) + unsigned(ap_const_lv32_1));
    tmp_14_fu_361_p3 <= 
        readBuffer1_load_s_fu_319_p3 when (tmp_8_fu_344_p2(0) = '1') else 
        tmp_13_fu_355_p2;
    tmp_15_fu_369_p2 <= "1" when (signed(tmp_14_fu_361_p3) > signed(delay_read_reg_871)) else "0";
    tmp_16_fu_374_p2 <= "1" when (signed(readBuffer2_load_s_fu_326_p3) > signed(ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190)) else "0";
        tmp_18_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(readBuffer2_load_s_fu_326_p3),64));

    tmp_1_fu_251_p2 <= "1" when (change_V_0_data_out = ap_const_lv32_0) else "0";
    tmp_23_fu_385_p2 <= std_logic_vector(unsigned(readBuffer2_load_s_fu_326_p3) + unsigned(ap_const_lv32_1));
    tmp_24_fu_391_p3 <= 
        readBuffer2_load_s_fu_326_p3 when (tmp_16_fu_374_p2(0) = '1') else 
        tmp_23_fu_385_p2;
    tmp_25_fu_399_p2 <= "1" when (signed(tmp_24_fu_391_p3) > signed(delay_read_reg_871)) else "0";
    tmp_26_fu_404_p2 <= "1" when (signed(readBuffer3_load_s_reg_916) > signed(ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190)) else "0";
        tmp_28_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(readBuffer3_load_s_reg_916),64));

    tmp_2_fu_269_p2 <= "1" when (signed(writeBuffer_load_s_fu_261_p3) < signed(ap_const_lv32_BB80)) else "0";
    tmp_33_fu_409_p2 <= std_logic_vector(unsigned(readBuffer3_load_s_reg_916) + unsigned(ap_const_lv32_1));
    tmp_34_fu_414_p3 <= 
        readBuffer3_load_s_reg_916 when (tmp_26_fu_404_p2(0) = '1') else 
        tmp_33_fu_409_p2;
    tmp_35_fu_421_p2 <= "1" when (signed(tmp_34_fu_414_p3) > signed(delay_read_reg_871)) else "0";
    tmp_36_fu_495_p2 <= "1" when (signed(readBuffer4_load_s_fu_436_p3) > signed(tmp_6_reg_190)) else "0";
        tmp_38_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(readBuffer4_load_s_fu_436_p3),64));

        tmp_3_fu_291_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(writeBuffer_load_s_reg_889),64));

    tmp_43_fu_506_p2 <= std_logic_vector(unsigned(readBuffer4_load_s_fu_436_p3) + unsigned(ap_const_lv32_1));
    tmp_44_fu_426_p2 <= "1" when (tmp_34_fu_414_p3 = ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190) else "0";
    tmp_45_fu_564_p2 <= (tmp_44_reg_1012 or tmp_36_fu_495_p2);
    tmp_46_fu_719_p2 <= (sel_tmp3_fu_631_p2 or sel_tmp11_fu_685_p2);
    tmp_47_fu_763_p3 <= 
        p_delayCount_load_s_fu_577_p3 when (sel_tmp_fu_597_p2(0) = '1') else 
        delayCount_load_s_reg_930;
    tmp_48_fu_770_p2 <= std_logic_vector(unsigned(tmp_47_fu_763_p3) + unsigned(ap_const_lv32_1));
    tmp_49_fu_806_p2 <= std_logic_vector(unsigned(tmp_6_reg_190) + unsigned(ap_const_lv32_FFFFFFFF));
        tmp_4_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(readBuffer1_load_s_fu_319_p3),64));

        tmp_50_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_806_p2),64));

    tmp_5_fu_295_p2 <= std_logic_vector(unsigned(writeBuffer_load_s_reg_889) + unsigned(ap_const_lv32_1));
    tmp_7_fu_333_p2 <= "1" when (signed(delayCount_load_s_fu_312_p3) > signed(delay_read_reg_871)) else "0";
    tmp_8_fu_344_p2 <= "1" when (signed(readBuffer1_load_s_fu_319_p3) > signed(ap_phi_precharge_reg_pp0_iter1_tmp_6_reg_190)) else "0";
    value_in_V_0_ack_in <= value_in_V_0_state(1);

    value_in_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage3, tmp_2_reg_896, ap_block_pp0_stage3_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_1 = tmp_2_reg_896) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0))) then 
            value_in_V_0_ack_out <= ap_const_logic_1;
        else 
            value_in_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    value_in_V_0_data_out_assign_proc : process(value_in_V_0_payload_A, value_in_V_0_payload_B, value_in_V_0_sel)
    begin
        if ((ap_const_logic_1 = value_in_V_0_sel)) then 
            value_in_V_0_data_out <= value_in_V_0_payload_B;
        else 
            value_in_V_0_data_out <= value_in_V_0_payload_A;
        end if; 
    end process;

    value_in_V_0_load_A <= (value_in_V_0_state_cmp_full and not(value_in_V_0_sel_wr));
    value_in_V_0_load_B <= (value_in_V_0_sel_wr and value_in_V_0_state_cmp_full);
    value_in_V_0_sel <= value_in_V_0_sel_rd;
    value_in_V_0_state_cmp_full <= '0' when (value_in_V_0_state = ap_const_lv2_1) else '1';
    value_in_V_0_vld_in <= value_in_V_TVALID;
    value_in_V_0_vld_out <= value_in_V_0_state(0);

    value_in_V_TDATA_blk_n_assign_proc : process(value_in_V_0_state, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, tmp_2_reg_896)
    begin
        if (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_1 = tmp_2_reg_896))) then 
            value_in_V_TDATA_blk_n <= value_in_V_0_state(0);
        else 
            value_in_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    value_in_V_TREADY <= value_in_V_0_state(1);
    value_out_V_1_ack_in <= value_out_V_1_state(1);
    value_out_V_1_ack_out <= value_out_V_TREADY;

    value_out_V_1_data_out_assign_proc : process(value_out_V_1_payload_A, value_out_V_1_payload_B, value_out_V_1_sel)
    begin
        if ((ap_const_logic_1 = value_out_V_1_sel)) then 
            value_out_V_1_data_out <= value_out_V_1_payload_B;
        else 
            value_out_V_1_data_out <= value_out_V_1_payload_A;
        end if; 
    end process;

    value_out_V_1_load_A <= (value_out_V_1_state_cmp_full and not(value_out_V_1_sel_wr));
    value_out_V_1_load_B <= (value_out_V_1_sel_wr and value_out_V_1_state_cmp_full);
    value_out_V_1_sel <= value_out_V_1_sel_rd;
    value_out_V_1_state_cmp_full <= '0' when (value_out_V_1_state = ap_const_lv2_1) else '1';

    value_out_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter13, ap_block_pp0_stage1_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter13) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0))) then 
            value_out_V_1_vld_in <= ap_const_logic_1;
        else 
            value_out_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    value_out_V_1_vld_out <= value_out_V_1_state(0);
    value_out_V_TDATA <= value_out_V_1_data_out;

    value_out_V_TDATA_blk_n_assign_proc : process(value_out_V_1_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00000000, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0)))) then 
            value_out_V_TDATA_blk_n <= value_out_V_1_state(1);
        else 
            value_out_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    value_out_V_TVALID <= value_out_V_1_state(0);
    writeBuffer_flag_1_phi_fu_171_p4 <= ap_phi_precharge_reg_pp0_iter1_writeBuffer_flag_1_reg_167;
    writeBuffer_load_s_fu_261_p3 <= 
        writeBuffer when (tmp_1_fu_251_p2(0) = '1') else 
        ap_const_lv32_0;
end behav;
